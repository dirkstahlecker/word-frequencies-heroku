{"ast":null,"code":"var _class,\n    _jsxFileName = \"/Users/dirkstahlecker/programming/word-frequencies-heroku/src/stats/NameCounts.tsx\";\n\nimport * as React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { NameInfo } from \"./NamesDB\";\nimport { Utils } from \"../Utils\";\nexport class NameCountsMachine {}\nexport let NameCounts = observer(_class = class NameCounts extends React.Component {\n  sortMap(map) {\n    const mapSort = new Map([...map.entries()].sort((a, b) => {\n      return b[1].count - a[1].count;\n    }));\n    return mapSort;\n  }\n\n  get machine() {\n    return this.props.machine;\n  }\n\n  displayDates(dates) {\n    let ret = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 28\n      }\n    });\n    dates.forEach(date => {\n      let dateElement = /*#__PURE__*/React.createElement(React.Fragment, null, Utils.printDate(date));\n      ret = /*#__PURE__*/React.createElement(React.Fragment, null, ret, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"colunm-layout-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"column-layout-column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }, dateElement)));\n    });\n    return ret;\n  } //TODO: display only unique first/last names, regardless of display names\n\n\n  render() {\n    let nameInfo = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 33\n      }\n    });\n    const map = this.sortMap(this.props.namesDict);\n    map.forEach(wordInfo => {\n      let wordElement = /*#__PURE__*/React.createElement(React.Fragment, null, wordInfo.word);\n\n      if (wordInfo instanceof NameInfo) {\n        wordElement = wordInfo.makeHtmlElememt();\n      }\n\n      nameInfo = /*#__PURE__*/React.createElement(React.Fragment, null, nameInfo, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"colunm-layout-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"column-layout-column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }, wordInfo.count, \": \", wordElement), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"column-layout-column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }\n      }, \"Unique days: \", wordInfo.dates.length), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"column-layout-column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }, \"First appeared: \", Utils.printDate(wordInfo.getFirstDate())), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"column-layout-column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }\n      }, \"Last appeared: \", Utils.printDate(wordInfo.getLastDate()))));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column-layout-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column-layout-column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, nameInfo), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column-layout-column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, \"Total Unique People: \", map.size));\n  }\n\n}) || _class; // <div className=\"column-layout-column\">\n//   <NamesPerDay namesMap={map}/>\n// </div>","map":{"version":3,"sources":["/Users/dirkstahlecker/programming/word-frequencies-heroku/src/stats/NameCounts.tsx"],"names":["React","observer","NameInfo","Utils","NameCountsMachine","NameCounts","Component","sortMap","map","mapSort","Map","entries","sort","a","b","count","machine","props","displayDates","dates","ret","forEach","date","dateElement","printDate","render","nameInfo","namesDict","wordInfo","wordElement","word","makeHtmlElememt","length","getFirstDate","getLastDate","size"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {observable, runInAction, action} from \"mobx\";\nimport {observer} from \"mobx-react\";\nimport {WordInfo, NameInfo} from \"./NamesDB\";\nimport {Markup} from \"./Markup\";\nimport {NamesPerDay} from \"./NamesPerDay\";\nimport {Utils} from \"../Utils\";\n\nexport interface NameCountsProps\n{\n  machine?: NameCountsMachine;\n  namesDict: Map<string, NameInfo>;\n}\n\nexport class NameCountsMachine\n{\n\n}\n\n@observer\nexport class NameCounts extends React.Component<NameCountsProps>\n{\n  private sortMap(map: Map<string, WordInfo>): Map<string, WordInfo>\n  {\n    const mapSort = new Map([...map.entries()].sort((a: [string, WordInfo], b: [string, WordInfo]) => {\n      return b[1].count - a[1].count;\n    }));\n    return mapSort;\n  }\n\n  private get machine(): NameCountsMachine\n  {\n    return this.props.machine as NameCountsMachine;\n  }\n\n  private displayDates(dates: Date[]): JSX.Element\n  {\n    let ret: JSX.Element = <div/>;\n    dates.forEach((date: Date) => {\n      let dateElement: JSX.Element | null = <>{Utils.printDate(date)}</>;\n\n      ret = <>\n        {ret}\n        <div className=\"colunm-layout-wrapper\">\n          <div className=\"column-layout-column\">\n            {dateElement}\n          </div>\n        </div>\n      </>\n    });\n\n    return ret;\n  }\n\n  //TODO: display only unique first/last names, regardless of display names\n\n  render()\n  {\n    let nameInfo: JSX.Element = <div/>;\n    const map = this.sortMap(this.props.namesDict)\n\n    map.forEach((wordInfo: WordInfo) => {\n      let wordElement: JSX.Element | null = <>{wordInfo.word}</>;\n      if (wordInfo instanceof NameInfo)\n      {\n        wordElement = (wordInfo as NameInfo).makeHtmlElememt();\n      }\n\n      nameInfo = <>\n        {nameInfo}\n        <div className=\"colunm-layout-wrapper\">\n          <div className=\"column-layout-column\">\n            {wordInfo.count}: {wordElement}\n          </div>\n          <div className=\"column-layout-column\">\n            Unique days: {wordInfo.dates.length}\n          </div>\n          {/*<div className=\"column-layout-column\">\n            All dates: {this.displayDates(wordInfo.dates)}\n          </div>*/}\n          <div className=\"column-layout-column\">\n            First appeared: {Utils.printDate(wordInfo.getFirstDate())}\n          </div>\n          <div className=\"column-layout-column\">\n            Last appeared: {Utils.printDate(wordInfo.getLastDate())}\n          </div>\n        </div>\n      </>\n    });\n\n    return <div className=\"column-layout-wrapper\">\n      <div className=\"column-layout-column\">\n        {\n          nameInfo\n        }\n      </div>\n      <div className=\"column-layout-column\">\n        Total Unique People: {map.size}\n      </div>\n\n    </div>;\n  }\n}\n\n\n// <div className=\"column-layout-column\">\n//   <NamesPerDay namesMap={map}/>\n// </div>\n"]},"metadata":{},"sourceType":"module"}