{"ast":null,"code":"// import * as React from 'react';\nimport { Markup } from \"./stats/Markup\";\nexport class MarkupUtils {\n  static makeMarkup(firstName, lastName, displayName = \"\") {\n    return \"[!!\" + (displayName === \"\" ? firstName : displayName) + \"|\" + firstName + \"_\" + lastName + \"!!]\";\n  }\n\n  static getMarkupPieces(markup) {\n    return Markup.MARKUP_REGEX.exec(markup);\n  } // public static getFullMarkupFromString(rawText: string): string | null\n  // {\n  // \tconst pieces: RegExpExecArray | null = MarkupUtils.getMarkupPieces(rawText);\n  // \tif (pieces == null)\n  // \t{\n  // \t\treturn null\n  // \t}\n  // \treturn pieces[0];\n  // }\n  //\n  // public static getDisplayNameFromMarkup(markup: string): string | null\n  // {\n  // \tconst pieces: RegExpExecArray | null = MarkupUtils.getMarkupPieces(markup);\n  // \tif (pieces == null)\n  // \t{\n  // \t\treturn null\n  // \t}\n  // \treturn pieces[1];\n  // }\n  //\n  // public static getFirstNameFromMarkup(markup: string): string | null\n  // {\n  // \tconst pieces: RegExpExecArray | null = MarkupUtils.getMarkupPieces(markup);\n  // \tif (pieces == null)\n  // \t{\n  // \t\treturn null\n  // \t}\n  // \treturn pieces[2];\n  // }\n  //\n  // public static getLastNameFromMarkup(markup: string): string | null\n  // {\n  // \tconst pieces: RegExpExecArray | null = MarkupUtils.getMarkupPieces(markup);\n  // \tif (pieces == null)\n  // \t{\n  // \t\treturn null\n  // \t}\n  // \treturn pieces[3];\n  // }\n\n\n}\nexport default MarkupUtils;","map":{"version":3,"sources":["/Users/dirkstahlecker/programming/word-frequencies-heroku/src/MarkupUtils.ts"],"names":["Markup","MarkupUtils","makeMarkup","firstName","lastName","displayName","getMarkupPieces","markup","MARKUP_REGEX","exec"],"mappings":"AAAA;AACA,SAAQA,MAAR,QAAqB,gBAArB;AAEA,OAAO,MAAMC,WAAN,CACP;AACE,SAAcC,UAAd,CAAyBC,SAAzB,EAA4CC,QAA5C,EAA8DC,WAAmB,GAAG,EAApF,EACA;AACI,WAAO,SAASA,WAAW,KAAK,EAAhB,GAAqBF,SAArB,GAAiCE,WAA1C,IAAyD,GAAzD,GAA+DF,SAA/D,GAA2E,GAA3E,GAAiFC,QAAjF,GAA4F,KAAnG;AACH;;AAED,SAAcE,eAAd,CAA8BC,MAA9B,EACA;AACC,WAAOP,MAAM,CAACQ,YAAP,CAAoBC,IAApB,CAAyBF,MAAzB,CAAP;AACA,GATH,CAWE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAjDF;AAoDA,eAAeN,WAAf","sourcesContent":["// import * as React from 'react';\nimport {Markup} from \"./stats/Markup\";\n\nexport class MarkupUtils\n{\n  public static makeMarkup(firstName: string, lastName: string, displayName: string = \"\"): string\n  {\n      return \"[!!\" + (displayName === \"\" ? firstName : displayName) + \"|\" + firstName + \"_\" + lastName + \"!!]\";\n  }\n\n  public static getMarkupPieces(markup: string): RegExpExecArray | null\n  {\n  \treturn Markup.MARKUP_REGEX.exec(markup);\n  }\n\n  // public static getFullMarkupFromString(rawText: string): string | null\n  // {\n  // \tconst pieces: RegExpExecArray | null = MarkupUtils.getMarkupPieces(rawText);\n  // \tif (pieces == null)\n  // \t{\n  // \t\treturn null\n  // \t}\n  // \treturn pieces[0];\n  // }\n\t//\n  // public static getDisplayNameFromMarkup(markup: string): string | null\n  // {\n  // \tconst pieces: RegExpExecArray | null = MarkupUtils.getMarkupPieces(markup);\n  // \tif (pieces == null)\n  // \t{\n  // \t\treturn null\n  // \t}\n  // \treturn pieces[1];\n  // }\n\t//\n  // public static getFirstNameFromMarkup(markup: string): string | null\n  // {\n  // \tconst pieces: RegExpExecArray | null = MarkupUtils.getMarkupPieces(markup);\n  // \tif (pieces == null)\n  // \t{\n  // \t\treturn null\n  // \t}\n  // \treturn pieces[2];\n  // }\n\t//\n  // public static getLastNameFromMarkup(markup: string): string | null\n  // {\n  // \tconst pieces: RegExpExecArray | null = MarkupUtils.getMarkupPieces(markup);\n  // \tif (pieces == null)\n  // \t{\n  // \t\treturn null\n  // \t}\n  // \treturn pieces[3];\n  // }\n}\n\nexport default MarkupUtils;\n"]},"metadata":{},"sourceType":"module"}