{"ast":null,"code":"var _class,\n    _jsxFileName = \"/Users/dirkstahlecker/programming/word-frequencies-heroku/src/stats/NameCounts.tsx\";\n\nimport * as React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { NameInfo } from \"./NamesDB\";\nimport { Markup } from \"./Markup\";\nexport class NameCountsMachine {}\nexport let NameCounts = observer(_class = class NameCounts extends React.Component {\n  sortMap(map) {\n    const mapSort = new Map([...map.entries()].sort((a, b) => {\n      return b[1].count - a[1].count;\n    }));\n    return mapSort;\n  }\n\n  get machine() {\n    return this.props.machine;\n  }\n\n  render() {\n    let nameInfo = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 33\n      }\n    });\n    const map = this.sortMap(this.props.namesDict);\n    map.forEach(wordInfo => {\n      let wordElement = /*#__PURE__*/React.createElement(React.Fragment, null, wordInfo.word);\n\n      if (wordInfo instanceof NameInfo) {\n        wordElement = Markup.getHtmlForMarkup(wordInfo.markup);\n      }\n\n      nameInfo = /*#__PURE__*/React.createElement(React.Fragment, null, nameInfo, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }, wordInfo.count, \": \", wordElement));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column-layout-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column-layout-column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, nameInfo), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column-layout-column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, \"Total Unique People: \", map.size), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column-layout-column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, \"Column 3\"));\n  }\n\n}) || _class;","map":{"version":3,"sources":["/Users/dirkstahlecker/programming/word-frequencies-heroku/src/stats/NameCounts.tsx"],"names":["React","observer","NameInfo","Markup","NameCountsMachine","NameCounts","Component","sortMap","map","mapSort","Map","entries","sort","a","b","count","machine","props","render","nameInfo","namesDict","forEach","wordInfo","wordElement","word","getHtmlForMarkup","markup","size"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAAQC,QAAR,QAAuB,YAAvB;AACA,SAAkBC,QAAlB,QAAiC,WAAjC;AACA,SAAQC,MAAR,QAAqB,UAArB;AAQA,OAAO,MAAMC,iBAAN,CACP;AAKA,WAAaC,UAAb,GADCJ,QACD,UADA,MACaI,UADb,SACgCL,KAAK,CAACM,SADtC,CAEA;AACUC,EAAAA,OAAR,CAAgBC,GAAhB,EACA;AACE,UAAMC,OAAO,GAAG,IAAIC,GAAJ,CAAQ,CAAC,GAAGF,GAAG,CAACG,OAAJ,EAAJ,EAAmBC,IAAnB,CAAwB,CAACC,CAAD,EAAwBC,CAAxB,KAAkD;AAChG,aAAOA,CAAC,CAAC,CAAD,CAAD,CAAKC,KAAL,GAAaF,CAAC,CAAC,CAAD,CAAD,CAAKE,KAAzB;AACD,KAFuB,CAAR,CAAhB;AAGA,WAAON,OAAP;AACD;;AAED,MAAYO,OAAZ,GACA;AACE,WAAO,KAAKC,KAAL,CAAWD,OAAlB;AACD;;AAEDE,EAAAA,MAAM,GACN;AACE,QAAIC,QAAqB,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5B;AACA,UAAMX,GAAG,GAAG,KAAKD,OAAL,CAAa,KAAKU,KAAL,CAAWG,SAAxB,CAAZ;AAEAZ,IAAAA,GAAG,CAACa,OAAJ,CAAaC,QAAD,IAAwB;AAClC,UAAIC,WAA+B,gBAAG,0CAAGD,QAAQ,CAACE,IAAZ,CAAtC;;AACA,UAAIF,QAAQ,YAAYpB,QAAxB,EACA;AACEqB,QAAAA,WAAW,GAAGpB,MAAM,CAACsB,gBAAP,CAAyBH,QAAD,CAAuBI,MAA/C,CAAd;AACD;;AAEDP,MAAAA,QAAQ,gBAAG,0CACRA,QADQ,eAET;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMG,QAAQ,CAACP,KAAf,QAAwBQ,WAAxB,CAFS,CAAX;AAID,KAXD;AAaA,wBAAO;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACL;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIJ,QAFJ,CADK,eAML;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACwBX,GAAG,CAACmB,IAD5B,CANK,eASL;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATK,CAAP;AAaD;;AA7CH,CADA","sourcesContent":["import * as React from \"react\";\nimport {observable, runInAction, action} from \"mobx\";\nimport {observer} from \"mobx-react\";\nimport {WordInfo, NameInfo} from \"./NamesDB\";\nimport {Markup} from \"./Markup\";\n\nexport interface NameCountsProps\n{\n  machine?: NameCountsMachine;\n  namesDict: Map<string, WordInfo>;\n}\n\nexport class NameCountsMachine\n{\n\n}\n\n@observer\nexport class NameCounts extends React.Component<NameCountsProps>\n{\n  private sortMap(map: Map<string, WordInfo>): Map<string, WordInfo>\n  {\n    const mapSort = new Map([...map.entries()].sort((a: [string, WordInfo], b: [string, WordInfo]) => {\n      return b[1].count - a[1].count;\n    }));\n    return mapSort;\n  }\n\n  private get machine(): NameCountsMachine\n  {\n    return this.props.machine as NameCountsMachine;\n  }\n\n  render()\n  {\n    let nameInfo: JSX.Element = <div/>;\n    const map = this.sortMap(this.props.namesDict)\n\n    map.forEach((wordInfo: WordInfo) => {\n      let wordElement: JSX.Element | null = <>{wordInfo.word}</>;\n      if (wordInfo instanceof NameInfo)\n      {\n        wordElement = Markup.getHtmlForMarkup((wordInfo as NameInfo).markup);\n      }\n\n      nameInfo = <>\n        {nameInfo}\n        <div>{wordInfo.count}: {wordElement}</div>\n      </>\n    });\n\n    return <div className=\"column-layout-wrapper\">\n      <div className=\"column-layout-column\">\n        {\n          nameInfo\n        }\n      </div>\n      <div className=\"column-layout-column\">\n        Total Unique People: {map.size}\n      </div>\n      <div className=\"column-layout-column\">\n        Column 3\n      </div>\n    </div>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}