{"ast":null,"code":"// import * as React from \"react\";\n// import {Links} from \"./links\";\n// import {Nodes} from \"./nodes\";\n//\n// export class D3App extends React.Component<Props, {}>\n// {\n//   ref: HTMLDivElement;\n//   simulation: any;\n//\n//   constructor(props: Props) {\n//     super(props);\n//     this.simulation = d3.forceSimulation()\n//       .force(\"link\", d3.forceLink().id(function(d: d3Node) {\n//         return d.id;\n//       }))\n//       .force(\"charge\", d3.forceManyBody().strength(-100))\n//       .force(\"center\", d3.forceCenter(this.props.width / 2, this.props.height / 2))\n//       .nodes(this.props.graph.nodes);\n//\n//     this.simulation.force(\"link\").links(this.props.graph.links);\n//   }\n//\n//   componentDidMount() {\n//     const node = d3.select(\".nodes\").selectAll(\"circle\");\n//     const link = d3.select(\".links\").selectAll(\"line\");\n//\n//     this.simulation.nodes(this.props.graph.nodes).on(\"tick\", ticked);\n//\n//     function ticked() {\n//       link\n//         .attr(\"x1\", function(d: any) {\n//           return d.source.x;\n//         })\n//         .attr(\"y1\", function(d: any) {\n//           return d.source.y;\n//         })\n//         .attr(\"x2\", function(d: any) {\n//           return d.target.x;\n//         })\n//         .attr(\"y2\", function(d: any) {\n//           return d.target.y;\n//         });\n//\n//       node\n//         .attr(\"cx\", function(d: any) {\n//           return d.x;\n//         })\n//         .attr(\"cy\", function(d: any) {\n//           return d.y;\n//         });\n//     }\n//   }\n//\n//   render() {\n//     const { width, height, graph } = this.props;\n//\n//     return (\n//       <svg className=\"container\" width={width} height={height}>\n//         <Links links={graph.links}/>\n//         <Nodes nodes={graph.nodes} simulation={this.simulation}/>\n//       </svg>\n//     );\n//   }\n// }\n//\n// export default D3App;","map":{"version":3,"sources":["/Users/dirkstahlecker/programming/word-frequencies-heroku/src/d3/app.tsx"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import * as React from \"react\";\n// import {Links} from \"./links\";\n// import {Nodes} from \"./nodes\";\n//\n// export class D3App extends React.Component<Props, {}>\n// {\n//   ref: HTMLDivElement;\n//   simulation: any;\n//\n//   constructor(props: Props) {\n//     super(props);\n//     this.simulation = d3.forceSimulation()\n//       .force(\"link\", d3.forceLink().id(function(d: d3Node) {\n//         return d.id;\n//       }))\n//       .force(\"charge\", d3.forceManyBody().strength(-100))\n//       .force(\"center\", d3.forceCenter(this.props.width / 2, this.props.height / 2))\n//       .nodes(this.props.graph.nodes);\n//\n//     this.simulation.force(\"link\").links(this.props.graph.links);\n//   }\n//\n//   componentDidMount() {\n//     const node = d3.select(\".nodes\").selectAll(\"circle\");\n//     const link = d3.select(\".links\").selectAll(\"line\");\n//\n//     this.simulation.nodes(this.props.graph.nodes).on(\"tick\", ticked);\n//\n//     function ticked() {\n//       link\n//         .attr(\"x1\", function(d: any) {\n//           return d.source.x;\n//         })\n//         .attr(\"y1\", function(d: any) {\n//           return d.source.y;\n//         })\n//         .attr(\"x2\", function(d: any) {\n//           return d.target.x;\n//         })\n//         .attr(\"y2\", function(d: any) {\n//           return d.target.y;\n//         });\n//\n//       node\n//         .attr(\"cx\", function(d: any) {\n//           return d.x;\n//         })\n//         .attr(\"cy\", function(d: any) {\n//           return d.y;\n//         });\n//     }\n//   }\n//\n//   render() {\n//     const { width, height, graph } = this.props;\n//\n//     return (\n//       <svg className=\"container\" width={width} height={height}>\n//         <Links links={graph.links}/>\n//         <Nodes nodes={graph.nodes} simulation={this.simulation}/>\n//       </svg>\n//     );\n//   }\n// }\n//\n// export default D3App;\n"]},"metadata":{},"sourceType":"module"}