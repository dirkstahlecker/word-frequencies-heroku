{"ast":null,"code":"import { Markup } from \"./Markup\"; // export class NamesDB\n// {\n//   private namesDict: Set<WordInfo> = new Set();\n// }\n\nexport class WordInfo {\n  constructor(word, count) {\n    this._word = void 0;\n    this._count = void 0;\n    this._dates = new Set();\n    this._word = word;\n    this._count = count;\n  }\n\n  get word() {\n    return this._word;\n  }\n\n  set word(value) {\n    this._word = value;\n  }\n\n  get count() {\n    return this._count;\n  }\n\n  set count(value) {\n    this._count = value;\n  }\n\n  get dates() {\n    return this._dates;\n  }\n\n  addDate(date) {\n    this._dates.add(date);\n  }\n\n  clearDates() {\n    this._dates.clear();\n  }\n\n}\nexport class NameInfo extends WordInfo {\n  constructor(word, count) {\n    if (!Markup.isMarkup(word)) {\n      throw Error(\"Must be valid markup to be a NameInfo\");\n    }\n\n    super(word, count);\n  }\n\n  set word(value) {\n    if (!Markup.isMarkup(value)) {\n      throw Error(\"Must be valid markup to be a NameInfo\");\n    }\n\n    this._word = value;\n  }\n\n  get word() {\n    //we know it's markup since it's checked in the setter\n    return Markup.create(this._word).displayName;\n  }\n\n  get markup() {\n    return Markup.create(this._word);\n  }\n\n}","map":{"version":3,"sources":["/Users/dirkstahlecker/programming/word-frequencies-heroku/src/stats/NamesDB.ts"],"names":["Markup","WordInfo","constructor","word","count","_word","_count","_dates","Set","value","dates","addDate","date","add","clearDates","clear","NameInfo","isMarkup","Error","create","displayName","markup"],"mappings":"AAAA,SAAQA,MAAR,QAAqB,UAArB,C,CAEA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,QAAN,CACP;AAKEC,EAAAA,WAAW,CAACC,IAAD,EAAeC,KAAf,EACX;AAAA,SALUC,KAKV;AAAA,SAJUC,MAIV;AAAA,SAHUC,MAGV,GAHwB,IAAIC,GAAJ,EAGxB;AACE,SAAKH,KAAL,GAAaF,IAAb;AACA,SAAKG,MAAL,GAAcF,KAAd;AACD;;AAED,MAAWD,IAAX,GACA;AACE,WAAO,KAAKE,KAAZ;AACD;;AAED,MAAWF,IAAX,CAAgBM,KAAhB,EACA;AACE,SAAKJ,KAAL,GAAaI,KAAb;AACD;;AAED,MAAWL,KAAX,GACA;AACE,WAAO,KAAKE,MAAZ;AACD;;AAED,MAAWF,KAAX,CAAiBK,KAAjB,EACA;AACE,SAAKH,MAAL,GAAcG,KAAd;AACD;;AAED,MAAWC,KAAX,GACA;AACE,WAAO,KAAKH,MAAZ;AACD;;AAEMI,EAAAA,OAAP,CAAeC,IAAf,EACA;AACE,SAAKL,MAAL,CAAYM,GAAZ,CAAgBD,IAAhB;AACD;;AAEME,EAAAA,UAAP,GACA;AACE,SAAKP,MAAL,CAAYQ,KAAZ;AACD;;AA5CH;AA+CA,OAAO,MAAMC,QAAN,SAAuBf,QAAvB,CACP;AACEC,EAAAA,WAAW,CAACC,IAAD,EAAeC,KAAf,EACX;AACE,QAAI,CAACJ,MAAM,CAACiB,QAAP,CAAgBd,IAAhB,CAAL,EACA;AACE,YAAMe,KAAK,CAAC,uCAAD,CAAX;AACD;;AACD,UAAMf,IAAN,EAAYC,KAAZ;AACD;;AAED,MAAWD,IAAX,CAAgBM,KAAhB,EACA;AACE,QAAI,CAACT,MAAM,CAACiB,QAAP,CAAgBR,KAAhB,CAAL,EACA;AACE,YAAMS,KAAK,CAAC,uCAAD,CAAX;AACD;;AACD,SAAKb,KAAL,GAAaI,KAAb;AACD;;AAED,MAAWN,IAAX,GACA;AACE;AACA,WAAOH,MAAM,CAACmB,MAAP,CAAc,KAAKd,KAAnB,EAA0Be,WAAjC;AACD;;AAED,MAAWC,MAAX,GACA;AACE,WAAOrB,MAAM,CAACmB,MAAP,CAAc,KAAKd,KAAnB,CAAP;AACD;;AA5BH","sourcesContent":["import {Markup} from \"./Markup\";\n\n// export class NamesDB\n// {\n//   private namesDict: Set<WordInfo> = new Set();\n// }\n\nexport class WordInfo\n{\n  protected _word: string;\n  protected _count: number;\n  protected _dates: Set = new Set();\n\n  constructor(word: string, count: number)\n  {\n    this._word = word;\n    this._count = count;\n  }\n\n  public get word(): string\n  {\n    return this._word;\n  }\n\n  public set word(value: string)\n  {\n    this._word = value;\n  }\n\n  public get count(): number\n  {\n    return this._count;\n  }\n\n  public set count(value: number)\n  {\n    this._count = value;\n  }\n\n  public get dates(): Date[]\n  {\n    return this._dates;\n  }\n\n  public addDate(date: Date): void\n  {\n    this._dates.add(date);\n  }\n\n  public clearDates(): void\n  {\n    this._dates.clear();\n  }\n}\n\nexport class NameInfo extends WordInfo\n{\n  constructor(word: string, count: number)\n  {\n    if (!Markup.isMarkup(word))\n    {\n      throw Error(\"Must be valid markup to be a NameInfo\");\n    }\n    super(word, count);\n  }\n\n  public set word(value: string)\n  {\n    if (!Markup.isMarkup(value))\n    {\n      throw Error(\"Must be valid markup to be a NameInfo\");\n    }\n    this._word = value;\n  }\n\n  public get word(): string\n  {\n    //we know it's markup since it's checked in the setter\n    return Markup.create(this._word).displayName;\n  }\n\n  public get markup(): Markup\n  {\n    return Markup.create(this._word)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}