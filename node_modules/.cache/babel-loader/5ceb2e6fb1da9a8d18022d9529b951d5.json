{"ast":null,"code":"import _initializerDefineProperty from \"/Users/dirkstahlecker/programming/word-frequencies-heroku/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/dirkstahlecker/programming/word-frequencies-heroku/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/dirkstahlecker/programming/word-frequencies-heroku/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class,\n    _descriptor,\n    _descriptor2,\n    _descriptor3,\n    _descriptor4,\n    _descriptor5,\n    _descriptor6,\n    _descriptor7,\n    _descriptor8,\n    _temp,\n    _class3,\n    _class4,\n    _descriptor9,\n    _temp2,\n    _jsxFileName = \"/Users/dirkstahlecker/programming/word-frequencies-heroku/src/App.tsx\";\n\nimport * as React from \"react\";\nimport { NameReference } from \"./NameReference\";\nimport { observable, action, runInAction, computed } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport { MarkupUtils } from \"./MarkupUtils\";\nimport { JournalReader, JournalReaderMachine } from \"./JournalReader\"; // import * as Modal from \"react-modal\";\n\nimport Modal from \"react-modal\";\nimport { NamePickerModal, NamePickerModalMachine } from \"./NamePickerModal\";\nimport { AddMarkupMachine } from \"./AddMarkupToExistingEntry\"; // import {Editor, EditorState} from 'draft-js';\n\nimport axios from 'axios'; // const { Client } = require('pg');\n// const client = new Client({\n//   connectionString: process.env.DATABASE_URL,\n//   ssl: true,\n// });\n// client.connect();\n// client.query('SELECT table_schema,table_name FROM information_schema.tables;', (err, res) => {\n//   if (err) throw err;\n//   for (let row of res.rows) {\n//     console.log(JSON.stringify(row));\n//   }\n//   client.end();\n// });\n\nModal.setAppElement(document.getElementById('root'));\nexport let AppMachine = (_class = (_temp = class AppMachine {\n  constructor() {\n    _initializerDefineProperty(this, \"journalText\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"currentName\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"finalText\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"dateStr\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"newJournalEntry\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"showDisplayJournalPlace\", _descriptor6, this);\n\n    this.modalObj = null;\n    this.addMarkupMachine = new AddMarkupMachine();\n    this.journalReaderMachine = new JournalReaderMachine();\n\n    _initializerDefineProperty(this, \"updateDate\", _descriptor7, this);\n\n    this.namePickerModalMachine = new NamePickerModalMachine();\n\n    _initializerDefineProperty(this, \"updateJournalText\", _descriptor8, this);\n\n    this.handleEasyMarkupGeneratorSubmit = () => {\n      document.getElementById(\"firstName\").value;\n      let firstName = document.getElementById(\"firstName\").value;\n      let lastName = document.getElementById(\"lastName\").value;\n      let displayName = document.getElementById(\"displayName\").value;\n      this.currentMarkupHack = MarkupUtils.makeMarkup(firstName, lastName, displayName);\n      document.getElementById(\"placeToSelectText\").value = this.currentMarkupHack;\n      var copyText = document.getElementById(\"displayCopyArea\");\n      this.selectElementContents(copyText);\n      document.execCommand(\"copy\");\n      document.getElementById(\"firstName\").value = \"\";\n      document.getElementById(\"firstName\").focus();\n      document.getElementById(\"lastName\").value = \"\";\n      document.getElementById(\"displayName\").value = \"\";\n    };\n  }\n\n  setCurrentName(value) {\n    this.currentName = value;\n  }\n\n  get showModal() {\n    return this.currentName != null;\n  }\n\n  createFinalText() {\n    this.finalText = this.dateStr + \": \" + this.journalText;\n  }\n\n  handleModalCloseRequest(commit) {\n    if (!commit) //close without adding markup\n      {\n        this.currentName = null;\n        return;\n      }\n\n    if (this.currentName == null) {\n      throw Error(\"name shouldn't be null\");\n    } //take the last name given by the user and insert the proper markup into the box itself\n\n\n    let realFirstName = this.namePickerModalMachine.realFirstName;\n    const markup = MarkupUtils.makeMarkup(realFirstName != null ? realFirstName : this.currentName, this.namePickerModalMachine.lastName, this.currentName);\n    const textLen = this.journalText.length;\n    const previousJournalText = this.journalText; //add the markup in place of the name\n\n    this.journalText = previousJournalText.substring(0, textLen - this.currentName.length - 1) + markup + previousJournalText.substring(textLen - 1, textLen); //clean up\n\n    this.currentName = null; //close the modal\n\n    this.namePickerModalMachine.lastName = \"\"; //reset\n\n    this.namePickerModalMachine.realFirstName = null;\n  } // private legalLetters: string[] = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\",\n  // \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"-\", \"'\", \"\\\"\"];\n\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"journalText\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"\";\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"currentName\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"finalText\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"\";\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"dateStr\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"\";\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"newJournalEntry\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return true;\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"showDisplayJournalPlace\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"setCurrentName\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setCurrentName\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"showModal\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"showModal\"), _class.prototype), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"updateDate\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return e => {\n      this.dateStr = e.currentTarget.value;\n    };\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"createFinalText\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"createFinalText\"), _class.prototype), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"updateJournalText\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return e => {\n      this.journalText = e.currentTarget.value;\n      let text = this.journalText;\n      let lastWord;\n      let lastCharacter = text.substring(text.length - 1, text.length);\n\n      if (lastCharacter === \" \") {\n        text = text.substring(0, text.length - 1); //remove trailing space\n\n        lastWord = text.substring(Math.max(text.lastIndexOf(\" \"), text.lastIndexOf(\"\\n\")), text.length);\n        lastWord = lastWord + \" \"; //add space back in for the rest of the logic to work properly\n      } else {\n        lastWord = text.substring(Math.max(text.lastIndexOf(\" \"), text.lastIndexOf(\"\\n\")), text.length);\n      } //names must be preceeded by a space or newline and followed by a word split character\n\n\n      if (AddMarkupMachine.wordSplitCharacters.indexOf(lastWord.substring(lastWord.length - 1, lastWord.length)) > -1) //last character is a word split character\n        {\n          lastWord = NameReference.cleanWord(lastWord.substring(0, lastWord.length - 1)); //remove the final character to get just the name\n\n          if (NameReference.isName(lastWord)) {\n            this.currentName = lastWord;\n          }\n        }\n    };\n  }\n})), _class);\nexport let App = observer(_class3 = (_class4 = (_temp2 = class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _initializerDefineProperty(this, \"currentMarkupHack\", _descriptor9, this);\n  }\n\n  selectElementContents(el) {\n    var range = document.createRange();\n    range.selectNodeContents(el);\n    var sel = window.getSelection();\n\n    if (sel == null) {\n      return;\n    }\n\n    sel.removeAllRanges();\n    sel.addRange(range);\n  }\n\n  makeRequest() {\n    axios.request({\n      url: 'localhost:8765' // transformResponse: (r: PersonSchema) => r.data\n\n    }).then(response => {\n      // `response` is of type `AxiosResponse<ServerData>`\n      // const { data } = response\n      // `data` is of type ServerData, correctly inferred\n      console.log(response.firstName);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        width: \"100%\",\n        height: \"100%\",\n        display: \"inline-block\",\n        verticalAlign: \"top\"\n      },\n      tabIndex: 0,\n      id: \"mainApp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NamePickerModal, {\n      machine: this.props.machine.namePickerModalMachine,\n      onRequestClose: commit => this.props.machine.handleModalCloseRequest(commit),\n      isOpen: this.props.machine.showModal,\n      currentName: this.props.machine.currentName == null ? \"\" : this.props.machine.currentName,\n      ref: x => this.props.machine.modalObj = x,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.makeRequest(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }\n    }, \"TEST\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => runInAction(() => this.props.machine.newJournalEntry = !this.props.machine.newJournalEntry),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }\n    }, this.props.machine.newJournalEntry ? \"Add markup to existing entry\" : \"Create new journal entry\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => runInAction(() => this.props.machine.showDisplayJournalPlace = !this.props.machine.showDisplayJournalPlace),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }\n    }, \"Read journal\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"50%\",\n        display: \"inline-block\",\n        verticalAlign: \"top\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }\n    }, this.props.machine.newJournalEntry && !this.props.machine.showDisplayJournalPlace && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"dateEntry\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 15\n      }\n    }, \"Date: \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"dateEntry\",\n      onChange: this.props.machine.updateDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"journalEntry\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 15\n      }\n    }, \"Entry: \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"journalEntry\",\n      value: this.props.machine.journalText,\n      onChange: e => this.props.machine.updateJournalText(e),\n      style: {\n        width: \"90%\",\n        height: \"200px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => this.props.machine.createFinalText(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 15\n      }\n    }, \"Submit\")), !this.props.machine.newJournalEntry && //           {/*<AddMarkupToExistingEntry machine={this.props.machine.addMarkupMachine} />*/}\n    !this.props.machine.showDisplayJournalPlace && /*#__PURE__*/React.createElement(\"div\", {\n      onKeyDown: e => {\n        if (e.key === \"Enter\") {\n          e.preventDefault();\n          this.handleEasyMarkupGeneratorSubmit();\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 13\n      }\n    }, \"First Name: \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"firstName\",\n      autoFocus: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 15\n      }\n    }), \"Last Name: \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"lastName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 15\n      }\n    }), \"Display Name: \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"displayName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleEasyMarkupGeneratorSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 15\n      }\n    }, \"Submit\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"displayCopyArea\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"placeToSelectText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }\n    }))), this.props.machine.showDisplayJournalPlace && /*#__PURE__*/React.createElement(JournalReader, {\n      machine: this.props.machine.journalReaderMachine,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"50%\",\n        display: \"inline-block\",\n        verticalAlign: \"top\",\n        whiteSpace: \"pre-wrap\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }\n    }, this.props.machine.finalText));\n  }\n\n}, _temp2), (_descriptor9 = _applyDecoratedDescriptor(_class4.prototype, \"currentMarkupHack\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"\";\n  }\n})), _class4)) || _class3;\n// @observer\n// class MyEditor extends React.Component<EditorProps>\n// {\n//   @observable editorState = EditorState.createEmpty();\n//   constructor(props: EditorProps)\n//   {\n//     super(props);\n//     // this.state = {editorState: EditorState.createEmpty()};\n//     // this.onChange = (editorState) => this.setState({editorState});\n//   }\n//   @action\n//   private onChange = (editorState: any): void => {\n//     this.editorState = editorState;\n//   }\n//   public render() \n//   {\n//     return (\n//         <Editor editorState={this.editorState} onChange={this.onChange} />\n//     );\n//   }\n// }\nexport default App;\n/*\nBUGS\n-have to write in chonological order - can't jump around with names, since they only add to end\n-need to have a story for name picker cancel\n-case sensitive (name popup only when name is capitalized) - or maybe only for particular names that are also common words (will)\n\n\nFEATURES\n-\n*/","map":{"version":3,"sources":["/Users/dirkstahlecker/programming/word-frequencies-heroku/src/App.tsx"],"names":["React","NameReference","observable","action","runInAction","computed","observer","MarkupUtils","JournalReader","JournalReaderMachine","Modal","NamePickerModal","NamePickerModalMachine","AddMarkupMachine","axios","setAppElement","document","getElementById","AppMachine","modalObj","addMarkupMachine","journalReaderMachine","namePickerModalMachine","handleEasyMarkupGeneratorSubmit","value","firstName","lastName","displayName","currentMarkupHack","makeMarkup","copyText","selectElementContents","execCommand","focus","setCurrentName","currentName","showModal","createFinalText","finalText","dateStr","journalText","handleModalCloseRequest","commit","Error","realFirstName","markup","textLen","length","previousJournalText","substring","e","currentTarget","text","lastWord","lastCharacter","Math","max","lastIndexOf","wordSplitCharacters","indexOf","cleanWord","isName","App","Component","el","range","createRange","selectNodeContents","sel","window","getSelection","removeAllRanges","addRange","makeRequest","request","url","then","response","console","log","render","width","height","display","verticalAlign","props","machine","x","newJournalEntry","showDisplayJournalPlace","updateDate","updateJournalText","key","preventDefault","whiteSpace"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {NameReference} from \"./NameReference\";\nimport {observable, action, runInAction, computed} from \"mobx\";\nimport {observer} from \"mobx-react\";\nimport {MarkupUtils} from \"./MarkupUtils\";\nimport {JournalReader, JournalReaderMachine} from \"./JournalReader\";\n// import * as Modal from \"react-modal\";\nimport Modal from \"react-modal\";\nimport {NamePickerModal, NamePickerModalMachine} from \"./NamePickerModal\";\nimport {AddMarkupMachine} from \"./AddMarkupToExistingEntry\";\n// import {Editor, EditorState} from 'draft-js';\nimport axios from 'axios';\n\n\n\n// const { Client } = require('pg');\n\n// const client = new Client({\n//   connectionString: process.env.DATABASE_URL,\n//   ssl: true,\n// });\n\n// client.connect();\n\n// client.query('SELECT table_schema,table_name FROM information_schema.tables;', (err, res) => {\n//   if (err) throw err;\n//   for (let row of res.rows) {\n//     console.log(JSON.stringify(row));\n//   }\n//   client.end();\n// });\n\n\n\nModal.setAppElement(document.getElementById('root')!!);\n\ninterface PersonSchema\n{\n  firstName: String,\n  lastName: String,\n  displayName: String\n}\n\nexport class AppMachine\n{\n  @observable\n  public journalText: string = \"\";\n\n  @observable\n  public currentName: string | null = null;\n\n  @observable\n  public finalText: string = \"\";\n\n  @observable\n  private dateStr: string = \"\";\n\n  @observable\n  public newJournalEntry: boolean = true;\n\n  @observable\n  public showDisplayJournalPlace: boolean = false;\n\n  public modalObj: NamePickerModal | null = null;\n\n  public addMarkupMachine: AddMarkupMachine = new AddMarkupMachine();\n\n  public journalReaderMachine: JournalReaderMachine = new JournalReaderMachine();\n\n  @action\n  public setCurrentName(value: string | null): void\n  {\n    this.currentName = value;\n  }\n\n  @computed\n  public get showModal(): boolean\n  {\n    return this.currentName != null;\n  }\n\n  @action\n  public updateDate = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    this.dateStr = e.currentTarget.value;\n  };\n\n  public namePickerModalMachine: NamePickerModalMachine = new NamePickerModalMachine();\n\n  @action\n  public createFinalText(): void\n  {\n    this.finalText = this.dateStr + \": \" + this.journalText;\n  }\n\n  @action\n  public updateJournalText = (e: React.ChangeEvent<HTMLTextAreaElement>): void => {\n    this.journalText = e.currentTarget.value;\n\n    let text: string = this.journalText;\n    let lastWord: string;\n    let lastCharacter: string = text.substring(text.length - 1, text.length);\n    if (lastCharacter === \" \")\n    {\n      text = text.substring(0, text.length - 1); //remove trailing space\n      lastWord = text.substring(Math.max(text.lastIndexOf(\" \"), text.lastIndexOf(\"\\n\")), text.length);\n      lastWord = lastWord + \" \"; //add space back in for the rest of the logic to work properly\n    }\n    else\n    {\n      lastWord = text.substring(Math.max(text.lastIndexOf(\" \"), text.lastIndexOf(\"\\n\")), text.length);\n    }\n    \n    //names must be preceeded by a space or newline and followed by a word split character\n    if (AddMarkupMachine.wordSplitCharacters.indexOf(lastWord.substring(lastWord.length - 1, lastWord.length)) > -1) //last character is a word split character\n    {\n      lastWord = NameReference.cleanWord(lastWord.substring(0, lastWord.length - 1)); //remove the final character to get just the name\n      if (NameReference.isName(lastWord))\n      {\n        this.currentName = lastWord;\n      }\n    }\n  };\n\n    //TODO: this hasn't been tested without jquery\n  public handleEasyMarkupGeneratorSubmit = (): void => {\n    document.getElementById(\"firstName\").value\n    let firstName: string | null = document.getElementById(\"firstName\").value;\n    let lastName: string = document.getElementById(\"lastName\").value as string;\n    let displayName: string = document.getElementById(\"displayName\").value as string;\n\n    this.currentMarkupHack = MarkupUtils.makeMarkup(firstName, lastName, displayName);\n    document.getElementById(\"placeToSelectText\").value = this.currentMarkupHack;\n\n    var copyText = document.getElementById(\"displayCopyArea\") as HTMLElement;\n    this.selectElementContents(copyText);\n    document.execCommand(\"copy\");\n\n    document.getElementById(\"firstName\").value = \"\";\n    document.getElementById(\"firstName\").focus();\n    document.getElementById(\"lastName\").value = \"\";\n    document.getElementById(\"displayName\").value = \"\";\n  };\n\n  public handleModalCloseRequest(commit: boolean): void\n  {\n    if (!commit) //close without adding markup\n    {\n      this.currentName = null;\n      return;\n    }\n    if (this.currentName == null)\n    {\n      throw Error(\"name shouldn't be null\");\n    }\n    //take the last name given by the user and insert the proper markup into the box itself\n    let realFirstName: string | null = this.namePickerModalMachine.realFirstName;\n    const markup: string = MarkupUtils.makeMarkup(realFirstName != null ? realFirstName : this.currentName, this.namePickerModalMachine.lastName, this.currentName);\n    const textLen: number = this.journalText.length;\n    const previousJournalText: string = this.journalText;\n    //add the markup in place of the name\n    this.journalText = previousJournalText.substring(0, textLen - this.currentName.length - 1) + markup +  previousJournalText.substring(textLen - 1, textLen);\n\n    //clean up\n    this.currentName = null; //close the modal\n    this.namePickerModalMachine.lastName = \"\"; //reset\n    this.namePickerModalMachine.realFirstName = null;\n  }\n\n  // private legalLetters: string[] = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\",\n  // \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"-\", \"'\", \"\\\"\"];\n}\n\nexport interface AppProps\n{\n  machine: AppMachine;\n}\n\n@observer\nexport class App extends React.Component<AppProps>\n{\n  @observable currentMarkupHack: string = \"\";\n\n  private selectElementContents(el: any) {\n    var range = document.createRange();\n    range.selectNodeContents(el);\n    var sel = window.getSelection();\n    if (sel == null)\n    {\n      return;\n    }\n    sel.removeAllRanges();\n    sel.addRange(range);\n  }\n\n  private makeRequest()\n  {\n    axios.request<PersonSchema>({\n      url: 'localhost:8765'\n      // transformResponse: (r: PersonSchema) => r.data\n    }).then((response: any) => {\n      // `response` is of type `AxiosResponse<ServerData>`\n      // const { data } = response\n      // `data` is of type ServerData, correctly inferred\n      console.log(response.firstName);\n    })\n  }\n\n  public render()\n  {\n    return (\n      <span style={{width: \"100%\", height: \"100%\", display: \"inline-block\", verticalAlign: \"top\"}} \n            tabIndex={0}\n            id=\"mainApp\"\n      >\n        <NamePickerModal \n          machine={this.props.machine.namePickerModalMachine}\n          onRequestClose={(commit: boolean) => this.props.machine.handleModalCloseRequest(commit)}\n          isOpen={this.props.machine.showModal}\n          currentName={this.props.machine.currentName == null ? \"\" : this.props.machine.currentName}\n          ref={(x) => this.props.machine.modalObj = x}\n        />\n        <button onClick={() => this.makeRequest()}>TEST</button>\n        <button onClick={() => runInAction(() => this.props.machine.newJournalEntry = !this.props.machine.newJournalEntry)}>\n          {this.props.machine.newJournalEntry ? \"Add markup to existing entry\" : \"Create new journal entry\"}\n        </button>\n        <button onClick={() => runInAction(() => this.props.machine.showDisplayJournalPlace = !this.props.machine.showDisplayJournalPlace)}>\n          Read journal\n        </button>\n        <br />\n        <br />\n        <div style={{width: \"50%\", display: \"inline-block\", verticalAlign: \"top\"}}>\n          {\n            this.props.machine.newJournalEntry && \n            !this.props.machine.showDisplayJournalPlace &&\n            <>\n              <label htmlFor=\"dateEntry\">Date: </label>\n              <br />\n              <input type=\"text\" id=\"dateEntry\" onChange={this.props.machine.updateDate} />\n              <br />\n              <br />\n              <label htmlFor=\"journalEntry\">Entry: </label>\n              <br />\n              <textarea id=\"journalEntry\" \n                        value={this.props.machine.journalText} \n                        onChange={(e) => this.props.machine.updateJournalText(e)}\n                        style={{width: \"90%\", height: \"200px\"}}\n              />\n              {/*<MyEditor />*/}\n              <br />\n              <button onClick={(e) => this.props.machine.createFinalText()}>Submit</button>\n            </>\n          }\n          {\n            !this.props.machine.newJournalEntry && //           {/*<AddMarkupToExistingEntry machine={this.props.machine.addMarkupMachine} />*/}\n            !this.props.machine.showDisplayJournalPlace &&\n            <div onKeyDown={(e: any) => {\n              if (e.key === \"Enter\")\n              {\n                e.preventDefault();\n                this.handleEasyMarkupGeneratorSubmit();\n              }\n            }}>\n              First Name: <input type=\"text\" id=\"firstName\" autoFocus={true}/>\n              <br />\n              Last Name: <input type=\"text\" id=\"lastName\" />\n              <br />\n              Display Name: <input type=\"text\" id=\"displayName\" />\n              <br />\n              <button onClick={this.handleEasyMarkupGeneratorSubmit}>Submit</button>\n              <br />\n              <br />\n              <div id=\"displayCopyArea\">\n                <input id=\"placeToSelectText\" />\n              </div>\n            </div>\n          }\n          {\n            this.props.machine.showDisplayJournalPlace &&\n            <JournalReader machine={this.props.machine.journalReaderMachine}/>\n          }\n\n        </div>\n        <div style={{width: \"50%\", display: \"inline-block\", verticalAlign: \"top\", whiteSpace: \"pre-wrap\"}}>\n          {this.props.machine.finalText}\n        </div>\n      </span>\n    );\n  }\n}\n\ninterface EditorProps\n{\n\n}\n\n// @observer\n// class MyEditor extends React.Component<EditorProps>\n// {\n//   @observable editorState = EditorState.createEmpty();\n\n//   constructor(props: EditorProps)\n//   {\n//     super(props);\n//     // this.state = {editorState: EditorState.createEmpty()};\n//     // this.onChange = (editorState) => this.setState({editorState});\n//   }\n\n//   @action\n//   private onChange = (editorState: any): void => {\n//     this.editorState = editorState;\n//   }\n\n//   public render() \n//   {\n//     return (\n//         <Editor editorState={this.editorState} onChange={this.onChange} />\n//     );\n//   }\n// }\n\nexport default App;\n\n\n/*\nBUGS\n-have to write in chonological order - can't jump around with names, since they only add to end\n-need to have a story for name picker cancel\n-case sensitive (name popup only when name is capitalized) - or maybe only for particular names that are also common words (will)\n\n\nFEATURES\n-\n*/\n"]},"metadata":{},"sourceType":"module"}