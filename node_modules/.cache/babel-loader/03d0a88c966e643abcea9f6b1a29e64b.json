{"ast":null,"code":"var _jsxFileName = \"/Users/dirkstahlecker/programming/word-frequencies-heroku/src/d3/nodes.tsx\";\n\nclass Nodes extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.ref = void 0;\n  }\n\n  componentDidMount() {\n    const context = d3.select(this.ref);\n    const simulation = this.props.simulation;\n    const color = d3.scaleOrdinal(d3.schemeCategory20);\n    context.selectAll(\"circle\").data(this.props.nodes).enter().append(\"circle\").attr(\"r\", 5).attr(\"fill\", function (d) {\n      return color(d.group.toString());\n    }).call(d3.drag().on(\"start\", onDragStart).on(\"drag\", onDrag).on(\"end\", onDragEnd)).append(\"title\").text(function (d) {\n      return d.id;\n    });\n\n    function onDragStart(d) {\n      if (!d3.event.active) {\n        simulation.alphaTarget(0.3).restart();\n      }\n\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n\n    function onDrag(d) {\n      d.fx = d3.event.x;\n      d.fy = d3.event.y;\n    }\n\n    function onDragEnd(d) {\n      if (!d3.event.active) {\n        simulation.alphaTarget(0);\n      }\n\n      d.fx = null;\n      d.fy = null;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"g\", {\n      className: \"nodes\",\n      ref: ref => this.ref = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 12\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/dirkstahlecker/programming/word-frequencies-heroku/src/d3/nodes.tsx"],"names":["Nodes","React","Component","ref","componentDidMount","context","d3","select","simulation","props","color","scaleOrdinal","schemeCategory20","selectAll","data","nodes","enter","append","attr","d","group","toString","call","drag","on","onDragStart","onDrag","onDragEnd","text","id","event","active","alphaTarget","restart","fx","x","fy","y","render"],"mappings":";;AAAA,MAAMA,KAAN,SAAoBC,KAAK,CAACC,SAA1B,CAA4E;AAAA;AAAA;AAAA,SAC1EC,GAD0E;AAAA;;AAG1EC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,OAAY,GAAGC,EAAE,CAACC,MAAH,CAAU,KAAKJ,GAAf,CAArB;AACA,UAAMK,UAAU,GAAG,KAAKC,KAAL,CAAWD,UAA9B;AACA,UAAME,KAAK,GAAGJ,EAAE,CAACK,YAAH,CAAgBL,EAAE,CAACM,gBAAnB,CAAd;AAEAP,IAAAA,OAAO,CAACQ,SAAR,CAAkB,QAAlB,EACGC,IADH,CACQ,KAAKL,KAAL,CAAWM,KADnB,EAEGC,KAFH,GAEWC,MAFX,CAEkB,QAFlB,EAGGC,IAHH,CAGQ,GAHR,EAGa,CAHb,EAIGA,IAJH,CAIQ,MAJR,EAIgB,UAASC,CAAT,EAAoB;AAChC,aAAOT,KAAK,CAACS,CAAC,CAACC,KAAF,CAAQC,QAAR,EAAD,CAAZ;AACD,KANH,EAOGC,IAPH,CAOQhB,EAAE,CAACiB,IAAH,GACDC,EADC,CACE,OADF,EACWC,WADX,EAEDD,EAFC,CAEE,MAFF,EAEUE,MAFV,EAGDF,EAHC,CAGE,KAHF,EAGSG,SAHT,CAPR,EAWGV,MAXH,CAWU,OAXV,EAYKW,IAZL,CAYU,UAAST,CAAT,EAAoB;AACxB,aAAOA,CAAC,CAACU,EAAT;AACD,KAdL;;AAgBA,aAASJ,WAAT,CAAqBN,CAArB,EAA6B;AAC3B,UAAI,CAACb,EAAE,CAACwB,KAAH,CAASC,MAAd,EAAsB;AACpBvB,QAAAA,UAAU,CAACwB,WAAX,CAAuB,GAAvB,EAA4BC,OAA5B;AACD;;AACDd,MAAAA,CAAC,CAACe,EAAF,GAAOf,CAAC,CAACgB,CAAT;AACAhB,MAAAA,CAAC,CAACiB,EAAF,GAAOjB,CAAC,CAACkB,CAAT;AACD;;AAED,aAASX,MAAT,CAAgBP,CAAhB,EAAwB;AACtBA,MAAAA,CAAC,CAACe,EAAF,GAAO5B,EAAE,CAACwB,KAAH,CAASK,CAAhB;AACAhB,MAAAA,CAAC,CAACiB,EAAF,GAAO9B,EAAE,CAACwB,KAAH,CAASO,CAAhB;AACD;;AAED,aAASV,SAAT,CAAmBR,CAAnB,EAA2B;AACzB,UAAI,CAACb,EAAE,CAACwB,KAAH,CAASC,MAAd,EAAsB;AACpBvB,QAAAA,UAAU,CAACwB,WAAX,CAAuB,CAAvB;AACD;;AACDb,MAAAA,CAAC,CAACe,EAAF,GAAO,IAAP;AACAf,MAAAA,CAAC,CAACiB,EAAF,GAAO,IAAP;AACD;AACF;;AAEDE,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAG,MAAA,SAAS,EAAC,OAAb;AAAqB,MAAA,GAAG,EAAGnC,GAAD,IAAsB,KAAKA,GAAL,GAAWA,GAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAhDyE","sourcesContent":["class Nodes extends React.Component<{nodes: d3Node[], simulation: any}, {}> {\n  ref: SVGGElement;\n\n  componentDidMount() {\n    const context: any = d3.select(this.ref);\n    const simulation = this.props.simulation;\n    const color = d3.scaleOrdinal(d3.schemeCategory20);\n\n    context.selectAll(\"circle\")\n      .data(this.props.nodes)\n      .enter().append(\"circle\")\n      .attr(\"r\", 5)\n      .attr(\"fill\", function(d: d3Node) {\n        return color(d.group.toString());\n      })\n      .call(d3.drag()\n          .on(\"start\", onDragStart)\n          .on(\"drag\", onDrag)\n          .on(\"end\", onDragEnd))\n      .append(\"title\")\n        .text(function(d: d3Node) {\n          return d.id;\n        });\n\n    function onDragStart(d: any) {\n      if (!d3.event.active) {\n        simulation.alphaTarget(0.3).restart();\n      }\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n\n    function onDrag(d: any) {\n      d.fx = d3.event.x;\n      d.fy = d3.event.y;\n    }\n\n    function onDragEnd(d: any) {\n      if (!d3.event.active) {\n        simulation.alphaTarget(0);\n      }\n      d.fx = null;\n      d.fy = null;\n    }\n  }\n\n  render() {\n    return <g className=\"nodes\" ref={(ref: SVGGElement) => this.ref = ref}/>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}