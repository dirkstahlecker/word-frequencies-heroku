{"ast":null,"code":"var _class;\n\nimport * as React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { JournalReaderMachine } from \"../JournalReader\";\nexport class StatsMachine {\n  //not observable - changing the journal needs a new stats object\n  constructor(journal) {\n    this.journal = \"\";\n    // this.journal = journal; //TODO\n    this.journal = \"1-1-20: Test journal [!!Colin|Colin_Poler!!] and [!!Phil|Phil_Seo!!].\\n\\n1-2-20: Another.\";\n    this.makeStats();\n  }\n\n  cleansePieces(pieces) {\n    const ret = [];\n    pieces.forEach(piece => {\n      if (piece == null || pieces === undefined) {\n        return;\n      }\n\n      if (piece === \"\") {\n        return;\n      }\n\n      ret.push(piece);\n    });\n    return ret;\n  }\n\n  makeStats() {\n    const pieces = JournalReaderMachine.splitOnMarkupPieces(this.journal);\n    pieces = this.cleansePieces(pieces);\n    console.log(pieces);\n  }\n\n}\nexport let Stats = observer(_class = class Stats extends React.Component {\n  get machine() {\n    return this.props.machine;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, \"Stats test\");\n  }\n\n}) || _class;","map":{"version":3,"sources":["/Users/dirkstahlecker/programming/word-frequencies-heroku/src/stats/Stats.tsx"],"names":["React","observer","JournalReaderMachine","StatsMachine","constructor","journal","makeStats","cleansePieces","pieces","ret","forEach","piece","undefined","push","splitOnMarkupPieces","console","log","Stats","Component","machine","props","render"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAAQC,QAAR,QAAuB,YAAvB;AACA,SAAQC,oBAAR,QAAmC,kBAAnC;AAOA,OAAO,MAAMC,YAAN,CACP;AACgC;AAE9BC,EAAAA,WAAW,CAACC,OAAD,EACX;AAAA,SAHQA,OAGR,GAH0B,EAG1B;AACE;AACA,SAAKA,OAAL,GAAe,2FAAf;AACA,SAAKC,SAAL;AACD;;AAEOC,EAAAA,aAAR,CAAsBC,MAAtB,EACA;AACE,UAAMC,GAAa,GAAG,EAAtB;AACAD,IAAAA,MAAM,CAACE,OAAP,CAAgBC,KAAD,IAAmB;AAChC,UAAIA,KAAK,IAAI,IAAT,IAAiBH,MAAM,KAAKI,SAAhC,EACA;AACE;AACD;;AACD,UAAID,KAAK,KAAK,EAAd,EACA;AACE;AACD;;AACDF,MAAAA,GAAG,CAACI,IAAJ,CAASF,KAAT;AACD,KAVD;AAWA,WAAOF,GAAP;AACD;;AAEOH,EAAAA,SAAR,GACA;AACE,UAAME,MAAgB,GAAGN,oBAAoB,CAACY,mBAArB,CAAyC,KAAKT,OAA9C,CAAzB;AACAG,IAAAA,MAAM,GAAG,KAAKD,aAAL,CAAmBC,MAAnB,CAAT;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AACD;;AAhCH;AAoCA,WAAaS,KAAb,GADChB,QACD,UADA,MACagB,KADb,SAC2BjB,KAAK,CAACkB,SADjC,CAEA;AACE,MAAYC,OAAZ,GACA;AACE,WAAO,KAAKC,KAAL,CAAWD,OAAlB;AACD;;AAEDE,EAAAA,MAAM,GACN;AACE,wBAAO,uDAAP;AACD;;AATH,CADA","sourcesContent":["import * as React from \"react\";\nimport {observable, runInAction} from \"mobx\";\nimport {observer} from \"mobx-react\";\nimport {JournalReaderMachine} from \"../JournalReader\";\n\nexport interface StatsProps\n{\n  machine: StatsMachine;\n}\n\nexport class StatsMachine\n{\n  private journal: string = \"\"; //not observable - changing the journal needs a new stats object\n\n  constructor(journal: string)\n  {\n    // this.journal = journal; //TODO\n    this.journal = \"1-1-20: Test journal [!!Colin|Colin_Poler!!] and [!!Phil|Phil_Seo!!].\\n\\n1-2-20: Another.\";\n    this.makeStats();\n  }\n\n  private cleansePieces(pieces: string[]): string[]\n  {\n    const ret: string[] = []\n    pieces.forEach((piece: string) => {\n      if (piece == null || pieces === undefined)\n      {\n        return;\n      }\n      if (piece === \"\")\n      {\n        return;\n      }\n      ret.push(piece);\n    });\n    return ret;\n  }\n\n  private makeStats(): void\n  {\n    const pieces: string[] = JournalReaderMachine.splitOnMarkupPieces(this.journal);\n    pieces = this.cleansePieces(pieces);\n    console.log(pieces);\n  }\n}\n\n@observer\nexport class Stats extends React.Component<StatsProps>\n{\n  private get machine(): StatsMachine\n  {\n    return this.props.machine as StatsMachine;\n  }\n\n  render()\n  {\n    return <>Stats test</>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}