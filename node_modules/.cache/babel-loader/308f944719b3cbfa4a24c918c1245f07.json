{"ast":null,"code":"import _initializerDefineProperty from \"/Users/dirkstahlecker/programming/word-frequencies-heroku/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/dirkstahlecker/programming/word-frequencies-heroku/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/dirkstahlecker/programming/word-frequencies-heroku/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class,\n    _descriptor,\n    _descriptor2,\n    _descriptor3,\n    _descriptor4,\n    _temp,\n    _class3,\n    _jsxFileName = \"/Users/dirkstahlecker/programming/word-frequencies-heroku/src/JournalWriter.tsx\";\n\nimport * as React from \"react\"; // import {NameReference} from \"./NameReference\";\n\nimport { observable, action, computed } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport { NamePickerModal, NamePickerModalMachine } from \"./NamePickerModal\";\nexport let JournalWriterMachine = (_class = (_temp = class JournalWriterMachine {\n  constructor() {\n    _initializerDefineProperty(this, \"journalText\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"dateStr\", _descriptor2, this);\n\n    this.modalObj = null;\n\n    _initializerDefineProperty(this, \"updateDate\", _descriptor3, this);\n\n    this.namePickerModalMachine = new NamePickerModalMachine();\n\n    _initializerDefineProperty(this, \"updateJournalText\", _descriptor4, this);\n  }\n\n  get showModal() {\n    return this.currentName != null;\n  }\n\n  handleModalCloseRequest(commit) {\n    if (!commit) //close without adding markup\n      {\n        this.currentName = null;\n        return;\n      }\n\n    if (this.currentName == null) {\n      throw Error(\"name shouldn't be null\");\n    } //take the last name given by the user and insert the proper markup into the box itself\n\n\n    let realFirstName = this.namePickerModalMachine.realFirstName;\n    const markup = MarkupUtils.makeMarkup(realFirstName != null ? realFirstName : this.currentName, this.namePickerModalMachine.lastName, this.currentName);\n    const textLen = this.journalText.length;\n    const previousJournalText = this.journalText; //add the markup in place of the name\n\n    this.journalText = previousJournalText.substring(0, textLen - this.currentName.length - 1) + markup + previousJournalText.substring(textLen - 1, textLen); //clean up\n\n    this.currentName = null; //close the modal\n\n    this.namePickerModalMachine.lastName = \"\"; //reset\n\n    this.namePickerModalMachine.realFirstName = null;\n  }\n\n  createFinalText() {\n    this.finalText = this.dateStr + \": \" + this.journalText;\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"journalText\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"\";\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"dateStr\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"\";\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"updateDate\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return e => {\n      this.dateStr = e.currentTarget.value;\n    };\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"showModal\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"showModal\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"createFinalText\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"createFinalText\"), _class.prototype), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"updateJournalText\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return e => {\n      this.journalText = e.currentTarget.value;\n      let text = this.journalText;\n      let lastWord;\n      let lastCharacter = text.substring(text.length - 1, text.length);\n\n      if (lastCharacter === \" \") {\n        text = text.substring(0, text.length - 1); //remove trailing space\n\n        lastWord = text.substring(Math.max(text.lastIndexOf(\" \"), text.lastIndexOf(\"\\n\")), text.length);\n        lastWord = lastWord + \" \"; //add space back in for the rest of the logic to work properly\n      } else {\n        lastWord = text.substring(Math.max(text.lastIndexOf(\" \"), text.lastIndexOf(\"\\n\")), text.length);\n      } //names must be preceeded by a space or newline and followed by a word split character\n\n\n      if (AddMarkupMachine.wordSplitCharacters.indexOf(lastWord.substring(lastWord.length - 1, lastWord.length)) > -1) //last character is a word split character\n        {\n          lastWord = NameReference.cleanWord(lastWord.substring(0, lastWord.length - 1)); //remove the final character to get just the name\n\n          if (NameReference.isName(lastWord)) {\n            this.currentName = lastWord;\n          }\n        }\n    };\n  }\n})), _class);\nexport let JournalWriter = observer(_class3 = class JournalWriter extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NamePickerModal, {\n      machine: this.props.machine.namePickerModalMachine,\n      onRequestClose: commit => this.props.machine.handleModalCloseRequest(commit),\n      isOpen: this.props.machine.showModal,\n      currentName: this.props.machine.currentName == null ? \"\" : this.props.machine.currentName,\n      ref: x => this.props.machine.modalObj = x,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 4\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"dateEntry\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }\n    }, \"Date: \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"dateEntry\",\n      onChange: this.props.machine.updateDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"journalEntry\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 5\n      }\n    }, \"Entry: \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"journalEntry\",\n      value: this.props.machine.journalText,\n      onChange: e => this.props.machine.updateJournalText(e),\n      style: {\n        width: \"90%\",\n        height: \"200px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => this.props.machine.createFinalText(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 5\n      }\n    }, \"Submit\"));\n  }\n\n}) || _class3;","map":{"version":3,"sources":["/Users/dirkstahlecker/programming/word-frequencies-heroku/src/JournalWriter.tsx"],"names":["React","observable","action","computed","observer","NamePickerModal","NamePickerModalMachine","JournalWriterMachine","modalObj","namePickerModalMachine","showModal","currentName","handleModalCloseRequest","commit","Error","realFirstName","markup","MarkupUtils","makeMarkup","lastName","textLen","journalText","length","previousJournalText","substring","createFinalText","finalText","dateStr","e","currentTarget","value","text","lastWord","lastCharacter","Math","max","lastIndexOf","AddMarkupMachine","wordSplitCharacters","indexOf","NameReference","cleanWord","isName","JournalWriter","Component","render","props","machine","x","updateDate","updateJournalText","width","height"],"mappings":";;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB,C,CACA;;AACA,SAAQC,UAAR,EAAoBC,MAApB,EAAyCC,QAAzC,QAAwD,MAAxD;AACA,SAAQC,QAAR,QAAuB,YAAvB;AACA,SAAQC,eAAR,EAAyBC,sBAAzB,QAAsD,mBAAtD;AAGA,WAAaC,oBAAb,sBAAO,MAAMA,oBAAN,CACP;AAAA;AAAA;;AAAA;;AAAA,SAOQC,QAPR,GAO2C,IAP3C;;AAAA;;AAAA,SAcQC,sBAdR,GAcyD,IAAIH,sBAAJ,EAdzD;;AAAA;AAAA;;AAgBC,MACWI,SADX,GAEA;AACC,WAAO,KAAKC,WAAL,IAAoB,IAA3B;AACA;;AAEMC,EAAAA,uBAAP,CAA+BC,MAA/B,EACA;AACC,QAAI,CAACA,MAAL,EAAa;AACb;AACE,aAAKF,WAAL,GAAmB,IAAnB;AACA;AACD;;AACD,QAAI,KAAKA,WAAL,IAAoB,IAAxB,EACA;AACE,YAAMG,KAAK,CAAC,wBAAD,CAAX;AACD,KATF,CAUC;;;AACA,QAAIC,aAA4B,GAAG,KAAKN,sBAAL,CAA4BM,aAA/D;AACA,UAAMC,MAAc,GAAGC,WAAW,CAACC,UAAZ,CAAuBH,aAAa,IAAI,IAAjB,GAAwBA,aAAxB,GAAwC,KAAKJ,WAApE,EAAiF,KAAKF,sBAAL,CAA4BU,QAA7G,EAAuH,KAAKR,WAA5H,CAAvB;AACA,UAAMS,OAAe,GAAG,KAAKC,WAAL,CAAiBC,MAAzC;AACA,UAAMC,mBAA2B,GAAG,KAAKF,WAAzC,CAdD,CAeC;;AACA,SAAKA,WAAL,GAAmBE,mBAAmB,CAACC,SAApB,CAA8B,CAA9B,EAAiCJ,OAAO,GAAG,KAAKT,WAAL,CAAiBW,MAA3B,GAAoC,CAArE,IAA0EN,MAA1E,GAAoFO,mBAAmB,CAACC,SAApB,CAA8BJ,OAAO,GAAG,CAAxC,EAA2CA,OAA3C,CAAvG,CAhBD,CAkBC;;AACA,SAAKT,WAAL,GAAmB,IAAnB,CAnBD,CAmB0B;;AACzB,SAAKF,sBAAL,CAA4BU,QAA5B,GAAuC,EAAvC,CApBD,CAoB4C;;AAC3C,SAAKV,sBAAL,CAA4BM,aAA5B,GAA4C,IAA5C;AACA;;AAGMU,EAAAA,eADP,GAEA;AACC,SAAKC,SAAL,GAAiB,KAAKC,OAAL,GAAe,IAAf,GAAsB,KAAKN,WAA5C;AACA;;AAnDF,CADA,qFAEEpB,UAFF;AAAA;AAAA;AAAA;AAAA;AAAA,WAG8B,EAH9B;AAAA;AAAA,2EAKEA,UALF;AAAA;AAAA;AAAA;AAAA;AAAA,WAM2B,EAN3B;AAAA;AAAA,8EAUEC,MAVF;AAAA;AAAA;AAAA;AAAA;AAAA,WAWsB0B,CAAD,IAAkD;AACrE,WAAKD,OAAL,GAAeC,CAAC,CAACC,aAAF,CAAgBC,KAA/B;AACA,KAbF;AAAA;AAAA,8DAiBE3B,QAjBF,sJAgDED,MAhDF,6KAsDEA,MAtDF;AAAA;AAAA;AAAA;AAAA;AAAA,WAuD6B0B,CAAD,IAAqD;AAC/E,WAAKP,WAAL,GAAmBO,CAAC,CAACC,aAAF,CAAgBC,KAAnC;AAEA,UAAIC,IAAY,GAAG,KAAKV,WAAxB;AACA,UAAIW,QAAJ;AACA,UAAIC,aAAqB,GAAGF,IAAI,CAACP,SAAL,CAAeO,IAAI,CAACT,MAAL,GAAc,CAA7B,EAAgCS,IAAI,CAACT,MAArC,CAA5B;;AACA,UAAIW,aAAa,KAAK,GAAtB,EACA;AACCF,QAAAA,IAAI,GAAGA,IAAI,CAACP,SAAL,CAAe,CAAf,EAAkBO,IAAI,CAACT,MAAL,GAAc,CAAhC,CAAP,CADD,CAC4C;;AAC3CU,QAAAA,QAAQ,GAAGD,IAAI,CAACP,SAAL,CAAeU,IAAI,CAACC,GAAL,CAASJ,IAAI,CAACK,WAAL,CAAiB,GAAjB,CAAT,EAAgCL,IAAI,CAACK,WAAL,CAAiB,IAAjB,CAAhC,CAAf,EAAwEL,IAAI,CAACT,MAA7E,CAAX;AACAU,QAAAA,QAAQ,GAAGA,QAAQ,GAAG,GAAtB,CAHD,CAG4B;AAC3B,OALD,MAOA;AACCA,QAAAA,QAAQ,GAAGD,IAAI,CAACP,SAAL,CAAeU,IAAI,CAACC,GAAL,CAASJ,IAAI,CAACK,WAAL,CAAiB,GAAjB,CAAT,EAAgCL,IAAI,CAACK,WAAL,CAAiB,IAAjB,CAAhC,CAAf,EAAwEL,IAAI,CAACT,MAA7E,CAAX;AACA,OAf8E,CAiB/E;;;AACA,UAAIe,gBAAgB,CAACC,mBAAjB,CAAqCC,OAArC,CAA6CP,QAAQ,CAACR,SAAT,CAAmBQ,QAAQ,CAACV,MAAT,GAAkB,CAArC,EAAwCU,QAAQ,CAACV,MAAjD,CAA7C,IAAyG,CAAC,CAA9G,EAAiH;AACjH;AACCU,UAAAA,QAAQ,GAAGQ,aAAa,CAACC,SAAd,CAAwBT,QAAQ,CAACR,SAAT,CAAmB,CAAnB,EAAsBQ,QAAQ,CAACV,MAAT,GAAkB,CAAxC,CAAxB,CAAX,CADD,CACiF;;AAChF,cAAIkB,aAAa,CAACE,MAAd,CAAqBV,QAArB,CAAJ,EACA;AACC,iBAAKrB,WAAL,GAAmBqB,QAAnB;AACA;AACD;AACD,KAjFF;AAAA;AAAA;AA4FA,WAAaW,aAAb,GADCvC,QACD,WADA,MACauC,aADb,SACmC3C,KAAK,CAAC4C,SADzC,CAEA;AACCC,EAAAA,MAAM,GACN;AACC,wBAAO,uDACN,oBAAC,eAAD;AACC,MAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,OAAX,CAAmBtC,sBAD7B;AAEC,MAAA,cAAc,EAAGI,MAAD,IAAqB,KAAKiC,KAAL,CAAWC,OAAX,CAAmBnC,uBAAnB,CAA2CC,MAA3C,CAFtC;AAGC,MAAA,MAAM,EAAE,KAAKiC,KAAL,CAAWC,OAAX,CAAmBrC,SAH5B;AAIC,MAAA,WAAW,EAAE,KAAKoC,KAAL,CAAWC,OAAX,CAAmBpC,WAAnB,IAAkC,IAAlC,GAAyC,EAAzC,GAA8C,KAAKmC,KAAL,CAAWC,OAAX,CAAmBpC,WAJ/E;AAKC,MAAA,GAAG,EAAGqC,CAAD,IAAO,KAAKF,KAAL,CAAWC,OAAX,CAAmBvC,QAAnB,GAA8BwC,CAL3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADM,eASL;AAAO,MAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATK,eAUL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVK,eAWL;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,WAAtB;AAAkC,MAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWC,OAAX,CAAmBE,UAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXK,eAYL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZK,eAaL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbK,eAcL;AAAO,MAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAdK,eAeL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfK,eAgBL;AAAU,MAAA,EAAE,EAAC,cAAb;AACU,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,OAAX,CAAmB1B,WADpC;AAEU,MAAA,QAAQ,EAAGO,CAAD,IAAO,KAAKkB,KAAL,CAAWC,OAAX,CAAmBG,iBAAnB,CAAqCtB,CAArC,CAF3B;AAGU,MAAA,KAAK,EAAE;AAACuB,QAAAA,KAAK,EAAE,KAAR;AAAeC,QAAAA,MAAM,EAAE;AAAvB,OAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBK,eAsBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBK,eAuBL;AAAQ,MAAA,OAAO,EAAGxB,CAAD,IAAO,KAAKkB,KAAL,CAAWC,OAAX,CAAmBtB,eAAnB,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvBK,CAAP;AAyBA;;AA5BF,CADA","sourcesContent":["import * as React from \"react\";\n// import {NameReference} from \"./NameReference\";\nimport {observable, action, runInAction, computed} from \"mobx\";\nimport {observer} from \"mobx-react\";\nimport {NamePickerModal, NamePickerModalMachine} from \"./NamePickerModal\";\n\n\nexport class JournalWriterMachine\n{\n\t@observable\n\tpublic journalText: string = \"\";\n\n\t@observable\n\tprivate dateStr: string = \"\";\n\n\tpublic modalObj: NamePickerModal | null = null;\n\n\t@action\n\tpublic updateDate = (e: React.ChangeEvent<HTMLInputElement>): void => {\n\t\tthis.dateStr = e.currentTarget.value;\n\t};\n\n\tpublic namePickerModalMachine: NamePickerModalMachine = new NamePickerModalMachine();\n\n\t@computed\n\tpublic get showModal(): boolean\n\t{\n\t\treturn this.currentName != null;\n\t}\n\n\tpublic handleModalCloseRequest(commit: boolean): void\n\t{\n\t\tif (!commit) //close without adding markup\n\t\t{\n\t\t  this.currentName = null;\n\t\t  return;\n\t\t}\n\t\tif (this.currentName == null)\n\t\t{\n\t\t  throw Error(\"name shouldn't be null\");\n\t\t}\n\t\t//take the last name given by the user and insert the proper markup into the box itself\n\t\tlet realFirstName: string | null = this.namePickerModalMachine.realFirstName;\n\t\tconst markup: string = MarkupUtils.makeMarkup(realFirstName != null ? realFirstName : this.currentName, this.namePickerModalMachine.lastName, this.currentName);\n\t\tconst textLen: number = this.journalText.length;\n\t\tconst previousJournalText: string = this.journalText;\n\t\t//add the markup in place of the name\n\t\tthis.journalText = previousJournalText.substring(0, textLen - this.currentName.length - 1) + markup +  previousJournalText.substring(textLen - 1, textLen);\n\n\t\t//clean up\n\t\tthis.currentName = null; //close the modal\n\t\tthis.namePickerModalMachine.lastName = \"\"; //reset\n\t\tthis.namePickerModalMachine.realFirstName = null;\n\t}\n\n\t@action\n\tpublic createFinalText(): void\n\t{\n\t\tthis.finalText = this.dateStr + \": \" + this.journalText;\n\t}\n\n\t@action\n\tpublic updateJournalText = (e: React.ChangeEvent<HTMLTextAreaElement>): void => {\n\t\tthis.journalText = e.currentTarget.value;\n\n\t\tlet text: string = this.journalText;\n\t\tlet lastWord: string;\n\t\tlet lastCharacter: string = text.substring(text.length - 1, text.length);\n\t\tif (lastCharacter === \" \")\n\t\t{\n\t\t\ttext = text.substring(0, text.length - 1); //remove trailing space\n\t\t\tlastWord = text.substring(Math.max(text.lastIndexOf(\" \"), text.lastIndexOf(\"\\n\")), text.length);\n\t\t\tlastWord = lastWord + \" \"; //add space back in for the rest of the logic to work properly\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlastWord = text.substring(Math.max(text.lastIndexOf(\" \"), text.lastIndexOf(\"\\n\")), text.length);\n\t\t}\n\n\t\t//names must be preceeded by a space or newline and followed by a word split character\n\t\tif (AddMarkupMachine.wordSplitCharacters.indexOf(lastWord.substring(lastWord.length - 1, lastWord.length)) > -1) //last character is a word split character\n\t\t{\n\t\t\tlastWord = NameReference.cleanWord(lastWord.substring(0, lastWord.length - 1)); //remove the final character to get just the name\n\t\t\tif (NameReference.isName(lastWord))\n\t\t\t{\n\t\t\t\tthis.currentName = lastWord;\n\t\t\t}\n\t\t}\n\t};\n\n\n}\n\nexport interface JournalWriterProps\n{\n\tmachine: JournalWriterMachine;\n}\n\n@observer\nexport class JournalWriter extends React.Component<AppProps>\n{\n\trender()\n\t{\n\t\treturn <>\n\t\t\t<NamePickerModal \n\t\t\t\tmachine={this.props.machine.namePickerModalMachine}\n\t\t\t\tonRequestClose={(commit: boolean) => this.props.machine.handleModalCloseRequest(commit)}\n\t\t\t\tisOpen={this.props.machine.showModal}\n\t\t\t\tcurrentName={this.props.machine.currentName == null ? \"\" : this.props.machine.currentName}\n\t\t\t\tref={(x) => this.props.machine.modalObj = x}\n\t\t\t/>\n\n\t\t\t\t<label htmlFor=\"dateEntry\">Date: </label>\n\t\t\t\t<br />\n\t\t\t\t<input type=\"text\" id=\"dateEntry\" onChange={this.props.machine.updateDate} />\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\t<label htmlFor=\"journalEntry\">Entry: </label>\n\t\t\t\t<br />\n\t\t\t\t<textarea id=\"journalEntry\" \n\t\t\t\t          value={this.props.machine.journalText} \n\t\t\t\t          onChange={(e) => this.props.machine.updateJournalText(e)}\n\t\t\t\t          style={{width: \"90%\", height: \"200px\"}}\n\t\t\t\t/>\n\t\t\t\t{/*<MyEditor />*/}\n\t\t\t\t<br />\n\t\t\t\t<button onClick={(e) => this.props.machine.createFinalText()}>Submit</button>\n\t\t</>;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}