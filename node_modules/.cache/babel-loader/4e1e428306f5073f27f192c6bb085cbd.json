{"ast":null,"code":";\n\n(function (exports) {\n  // export the class if we are in a Node-like system.\n  if (typeof module === 'object' && module.exports === exports) exports = module.exports = SemVer; // The debug function is excluded entirely from the minified version.\n  // Note: this is the semver.org version of the spec that it implements\n  // Not necessarily the package version of this code.\n\n  exports.SEMVER_SPEC_VERSION = '2.0.0';\n  var MAX_LENGTH = 256;\n  var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991; // The actual regexps go on exports.re\n\n  var re = exports.re = [];\n  var src = exports.src = [];\n  var R = 0; // The following Regular Expressions can be used for tokenizing,\n  // validating, and parsing SemVer version strings.\n  // ## Numeric Identifier\n  // A single `0`, or a non-zero digit followed by zero or more digits.\n\n  var NUMERICIDENTIFIER = R++;\n  src[NUMERICIDENTIFIER] = '0|[1-9]\\\\d*';\n  var NUMERICIDENTIFIERLOOSE = R++;\n  src[NUMERICIDENTIFIERLOOSE] = '[0-9]+'; // ## Non-numeric Identifier\n  // Zero or more digits, followed by a letter or hyphen, and then zero or\n  // more letters, digits, or hyphens.\n\n  var NONNUMERICIDENTIFIER = R++;\n  src[NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*'; // ## Main Version\n  // Three dot-separated numeric identifiers.\n\n  var MAINVERSION = R++;\n  src[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\\\.' + '(' + src[NUMERICIDENTIFIER] + ')\\\\.' + '(' + src[NUMERICIDENTIFIER] + ')';\n  var MAINVERSIONLOOSE = R++;\n  src[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' + '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' + '(' + src[NUMERICIDENTIFIERLOOSE] + ')'; // ## Pre-release Version Identifier\n  // A numeric identifier, or a non-numeric identifier.\n\n  var PRERELEASEIDENTIFIER = R++;\n  src[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] + '|' + src[NONNUMERICIDENTIFIER] + ')';\n  var PRERELEASEIDENTIFIERLOOSE = R++;\n  src[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] + '|' + src[NONNUMERICIDENTIFIER] + ')'; // ## Pre-release Version\n  // Hyphen, followed by one or more dot-separated pre-release version\n  // identifiers.\n\n  var PRERELEASE = R++;\n  src[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] + '(?:\\\\.' + src[PRERELEASEIDENTIFIER] + ')*))';\n  var PRERELEASELOOSE = R++;\n  src[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] + '(?:\\\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))'; // ## Build Metadata Identifier\n  // Any combination of digits, letters, or hyphens.\n\n  var BUILDIDENTIFIER = R++;\n  src[BUILDIDENTIFIER] = '[0-9A-Za-z-]+'; // ## Build Metadata\n  // Plus sign, followed by one or more period-separated build metadata\n  // identifiers.\n\n  var BUILD = R++;\n  src[BUILD] = '(?:\\\\+(' + src[BUILDIDENTIFIER] + '(?:\\\\.' + src[BUILDIDENTIFIER] + ')*))'; // ## Full Version String\n  // A main version, followed optionally by a pre-release version and\n  // build metadata.\n  // Note that the only major, minor, patch, and pre-release sections of\n  // the version string are capturing groups.  The build metadata is not a\n  // capturing group, because it should not ever be used in version\n  // comparison.\n\n  var FULL = R++;\n  var FULLPLAIN = 'v?' + src[MAINVERSION] + src[PRERELEASE] + '?' + src[BUILD] + '?';\n  src[FULL] = '^' + FULLPLAIN + '$'; // like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n  // also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n  // common in the npm registry.\n\n  var LOOSEPLAIN = '[v=\\\\s]*' + src[MAINVERSIONLOOSE] + src[PRERELEASELOOSE] + '?' + src[BUILD] + '?';\n  var LOOSE = R++;\n  src[LOOSE] = '^' + LOOSEPLAIN + '$';\n  var GTLT = R++;\n  src[GTLT] = '((?:<|>)?=?)'; // Something like \"2.*\" or \"1.2.x\".\n  // Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n  // Only the first item is strictly required.\n\n  var XRANGEIDENTIFIERLOOSE = R++;\n  src[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*';\n  var XRANGEIDENTIFIER = R++;\n  src[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\\\*';\n  var XRANGEPLAIN = R++;\n  src[XRANGEPLAIN] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIER] + ')' + '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' + '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' + '(?:' + src[PRERELEASE] + ')?' + src[BUILD] + '?' + ')?)?';\n  var XRANGEPLAINLOOSE = R++;\n  src[XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' + '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' + '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' + '(?:' + src[PRERELEASELOOSE] + ')?' + src[BUILD] + '?' + ')?)?';\n  var XRANGE = R++;\n  src[XRANGE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAIN] + '$';\n  var XRANGELOOSE = R++;\n  src[XRANGELOOSE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAINLOOSE] + '$'; // Tilde ranges.\n  // Meaning is \"reasonably at or greater than\"\n\n  var LONETILDE = R++;\n  src[LONETILDE] = '(?:~>?)';\n  var TILDETRIM = R++;\n  src[TILDETRIM] = '(\\\\s*)' + src[LONETILDE] + '\\\\s+';\n  re[TILDETRIM] = new RegExp(src[TILDETRIM], 'g');\n  var tildeTrimReplace = '$1~';\n  var TILDE = R++;\n  src[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$';\n  var TILDELOOSE = R++;\n  src[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$'; // Caret ranges.\n  // Meaning is \"at least and backwards compatible with\"\n\n  var LONECARET = R++;\n  src[LONECARET] = '(?:\\\\^)';\n  var CARETTRIM = R++;\n  src[CARETTRIM] = '(\\\\s*)' + src[LONECARET] + '\\\\s+';\n  re[CARETTRIM] = new RegExp(src[CARETTRIM], 'g');\n  var caretTrimReplace = '$1^';\n  var CARET = R++;\n  src[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$';\n  var CARETLOOSE = R++;\n  src[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$'; // A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\n\n  var COMPARATORLOOSE = R++;\n  src[COMPARATORLOOSE] = '^' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + ')$|^$';\n  var COMPARATOR = R++;\n  src[COMPARATOR] = '^' + src[GTLT] + '\\\\s*(' + FULLPLAIN + ')$|^$'; // An expression to strip any whitespace between the gtlt and the thing\n  // it modifies, so that `> 1.2.3` ==> `>1.2.3`\n\n  var COMPARATORTRIM = R++;\n  src[COMPARATORTRIM] = '(\\\\s*)' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')'; // this one has to use the /g flag\n\n  re[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g');\n  var comparatorTrimReplace = '$1$2$3'; // Something like `1.2.3 - 1.2.4`\n  // Note that these all use the loose form, because they'll be\n  // checked against either the strict or loose comparator form\n  // later.\n\n  var HYPHENRANGE = R++;\n  src[HYPHENRANGE] = '^\\\\s*(' + src[XRANGEPLAIN] + ')' + '\\\\s+-\\\\s+' + '(' + src[XRANGEPLAIN] + ')' + '\\\\s*$';\n  var HYPHENRANGELOOSE = R++;\n  src[HYPHENRANGELOOSE] = '^\\\\s*(' + src[XRANGEPLAINLOOSE] + ')' + '\\\\s+-\\\\s+' + '(' + src[XRANGEPLAINLOOSE] + ')' + '\\\\s*$'; // Star ranges basically just allow anything at all.\n\n  var STAR = R++;\n  src[STAR] = '(<|>)?=?\\\\s*\\\\*'; // Compile to actual regexp objects.\n  // All are flag-free, unless they were created above with a flag.\n\n  for (var i = 0; i < R; i++) {\n    ;\n    if (!re[i]) re[i] = new RegExp(src[i]);\n  }\n\n  exports.parse = parse;\n\n  function parse(version, loose) {\n    if (version.length > MAX_LENGTH) return null;\n    var r = loose ? re[LOOSE] : re[FULL];\n    if (!r.test(version)) return null;\n\n    try {\n      return new SemVer(version, loose);\n    } catch (er) {\n      return null;\n    }\n  }\n\n  exports.valid = valid;\n\n  function valid(version, loose) {\n    var v = parse(version, loose);\n    return v ? v.version : null;\n  }\n\n  exports.clean = clean;\n\n  function clean(version, loose) {\n    var s = parse(version.trim().replace(/^[=v]+/, ''), loose);\n    return s ? s.version : null;\n  }\n\n  exports.SemVer = SemVer;\n\n  function SemVer(version, loose) {\n    if (version instanceof SemVer) {\n      if (version.loose === loose) return version;else version = version.version;\n    } else if (typeof version !== 'string') {\n      throw new TypeError('Invalid Version: ' + version);\n    }\n\n    if (version.length > MAX_LENGTH) throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters');\n    if (!(this instanceof SemVer)) return new SemVer(version, loose);\n    ;\n    this.loose = loose;\n    var m = version.trim().match(loose ? re[LOOSE] : re[FULL]);\n    if (!m) throw new TypeError('Invalid Version: ' + version);\n    this.raw = version; // these are actually numbers\n\n    this.major = +m[1];\n    this.minor = +m[2];\n    this.patch = +m[3];\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) throw new TypeError('Invalid major version');\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) throw new TypeError('Invalid minor version');\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) throw new TypeError('Invalid patch version'); // numberify any prerelease numeric ids\n\n    if (!m[4]) this.prerelease = [];else this.prerelease = m[4].split('.').map(function (id) {\n      return /^[0-9]+$/.test(id) ? +id : id;\n    });\n    this.build = m[5] ? m[5].split('.') : [];\n    this.format();\n  }\n\n  SemVer.prototype.format = function () {\n    this.version = this.major + '.' + this.minor + '.' + this.patch;\n    if (this.prerelease.length) this.version += '-' + this.prerelease.join('.');\n    return this.version;\n  };\n\n  SemVer.prototype.inspect = function () {\n    return '<SemVer \"' + this + '\">';\n  };\n\n  SemVer.prototype.toString = function () {\n    return this.version;\n  };\n\n  SemVer.prototype.compare = function (other) {\n    ;\n    if (!(other instanceof SemVer)) other = new SemVer(other, this.loose);\n    return this.compareMain(other) || this.comparePre(other);\n  };\n\n  SemVer.prototype.compareMain = function (other) {\n    if (!(other instanceof SemVer)) other = new SemVer(other, this.loose);\n    return compareIdentifiers(this.major, other.major) || compareIdentifiers(this.minor, other.minor) || compareIdentifiers(this.patch, other.patch);\n  };\n\n  SemVer.prototype.comparePre = function (other) {\n    if (!(other instanceof SemVer)) other = new SemVer(other, this.loose); // NOT having a prerelease is > having one\n\n    if (this.prerelease.length && !other.prerelease.length) return -1;else if (!this.prerelease.length && other.prerelease.length) return 1;else if (!this.prerelease.length && !other.prerelease.length) return 0;\n    var i = 0;\n\n    do {\n      var a = this.prerelease[i];\n      var b = other.prerelease[i];\n      ;\n      if (a === undefined && b === undefined) return 0;else if (b === undefined) return 1;else if (a === undefined) return -1;else if (a === b) continue;else return compareIdentifiers(a, b);\n    } while (++i);\n  }; // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n\n\n  SemVer.prototype.inc = function (release, identifier) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0;\n        this.patch = 0;\n        this.minor = 0;\n        this.major++;\n        this.inc('pre', identifier);\n        break;\n\n      case 'preminor':\n        this.prerelease.length = 0;\n        this.patch = 0;\n        this.minor++;\n        this.inc('pre', identifier);\n        break;\n\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0;\n        this.inc('patch', identifier);\n        this.inc('pre', identifier);\n        break;\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n\n      case 'prerelease':\n        if (this.prerelease.length === 0) this.inc('patch', identifier);\n        this.inc('pre', identifier);\n        break;\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0) this.major++;\n        this.minor = 0;\n        this.patch = 0;\n        this.prerelease = [];\n        break;\n\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) this.minor++;\n        this.patch = 0;\n        this.prerelease = [];\n        break;\n\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) this.patch++;\n        this.prerelease = [];\n        break;\n      // This probably shouldn't be used publicly.\n      // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n\n      case 'pre':\n        if (this.prerelease.length === 0) this.prerelease = [0];else {\n          var i = this.prerelease.length;\n\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++;\n              i = -2;\n            }\n          }\n\n          if (i === -1) // didn't increment anything\n            this.prerelease.push(0);\n        }\n\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          if (this.prerelease[0] === identifier) {\n            if (isNaN(this.prerelease[1])) this.prerelease = [identifier, 0];\n          } else this.prerelease = [identifier, 0];\n        }\n\n        break;\n\n      default:\n        throw new Error('invalid increment argument: ' + release);\n    }\n\n    this.format();\n    return this;\n  };\n\n  exports.inc = inc;\n\n  function inc(version, release, loose, identifier) {\n    if (typeof loose === 'string') {\n      identifier = loose;\n      loose = undefined;\n    }\n\n    try {\n      return new SemVer(version, loose).inc(release, identifier).version;\n    } catch (er) {\n      return null;\n    }\n  }\n\n  exports.diff = diff;\n\n  function diff(version1, version2) {\n    if (eq(version1, version2)) {\n      return null;\n    } else {\n      var v1 = parse(version1);\n      var v2 = parse(version2);\n\n      if (v1.prerelease.length || v2.prerelease.length) {\n        for (var key in v1) {\n          if (key === 'major' || key === 'minor' || key === 'patch') {\n            if (v1[key] !== v2[key]) {\n              return 'pre' + key;\n            }\n          }\n        }\n\n        return 'prerelease';\n      }\n\n      for (var key in v1) {\n        if (key === 'major' || key === 'minor' || key === 'patch') {\n          if (v1[key] !== v2[key]) {\n            return key;\n          }\n        }\n      }\n    }\n  }\n\n  exports.compareIdentifiers = compareIdentifiers;\n  var numeric = /^[0-9]+$/;\n\n  function compareIdentifiers(a, b) {\n    var anum = numeric.test(a);\n    var bnum = numeric.test(b);\n\n    if (anum && bnum) {\n      a = +a;\n      b = +b;\n    }\n\n    return anum && !bnum ? -1 : bnum && !anum ? 1 : a < b ? -1 : a > b ? 1 : 0;\n  }\n\n  exports.rcompareIdentifiers = rcompareIdentifiers;\n\n  function rcompareIdentifiers(a, b) {\n    return compareIdentifiers(b, a);\n  }\n\n  exports.major = major;\n\n  function major(a, loose) {\n    return new SemVer(a, loose).major;\n  }\n\n  exports.minor = minor;\n\n  function minor(a, loose) {\n    return new SemVer(a, loose).minor;\n  }\n\n  exports.patch = patch;\n\n  function patch(a, loose) {\n    return new SemVer(a, loose).patch;\n  }\n\n  exports.compare = compare;\n\n  function compare(a, b, loose) {\n    return new SemVer(a, loose).compare(b);\n  }\n\n  exports.compareLoose = compareLoose;\n\n  function compareLoose(a, b) {\n    return compare(a, b, true);\n  }\n\n  exports.rcompare = rcompare;\n\n  function rcompare(a, b, loose) {\n    return compare(b, a, loose);\n  }\n\n  exports.sort = sort;\n\n  function sort(list, loose) {\n    return list.sort(function (a, b) {\n      return exports.compare(a, b, loose);\n    });\n  }\n\n  exports.rsort = rsort;\n\n  function rsort(list, loose) {\n    return list.sort(function (a, b) {\n      return exports.rcompare(a, b, loose);\n    });\n  }\n\n  exports.gt = gt;\n\n  function gt(a, b, loose) {\n    return compare(a, b, loose) > 0;\n  }\n\n  exports.lt = lt;\n\n  function lt(a, b, loose) {\n    return compare(a, b, loose) < 0;\n  }\n\n  exports.eq = eq;\n\n  function eq(a, b, loose) {\n    return compare(a, b, loose) === 0;\n  }\n\n  exports.neq = neq;\n\n  function neq(a, b, loose) {\n    return compare(a, b, loose) !== 0;\n  }\n\n  exports.gte = gte;\n\n  function gte(a, b, loose) {\n    return compare(a, b, loose) >= 0;\n  }\n\n  exports.lte = lte;\n\n  function lte(a, b, loose) {\n    return compare(a, b, loose) <= 0;\n  }\n\n  exports.cmp = cmp;\n\n  function cmp(a, op, b, loose) {\n    var ret;\n\n    switch (op) {\n      case '===':\n        if (typeof a === 'object') a = a.version;\n        if (typeof b === 'object') b = b.version;\n        ret = a === b;\n        break;\n\n      case '!==':\n        if (typeof a === 'object') a = a.version;\n        if (typeof b === 'object') b = b.version;\n        ret = a !== b;\n        break;\n\n      case '':\n      case '=':\n      case '==':\n        ret = eq(a, b, loose);\n        break;\n\n      case '!=':\n        ret = neq(a, b, loose);\n        break;\n\n      case '>':\n        ret = gt(a, b, loose);\n        break;\n\n      case '>=':\n        ret = gte(a, b, loose);\n        break;\n\n      case '<':\n        ret = lt(a, b, loose);\n        break;\n\n      case '<=':\n        ret = lte(a, b, loose);\n        break;\n\n      default:\n        throw new TypeError('Invalid operator: ' + op);\n    }\n\n    return ret;\n  }\n\n  exports.Comparator = Comparator;\n\n  function Comparator(comp, loose) {\n    if (comp instanceof Comparator) {\n      if (comp.loose === loose) return comp;else comp = comp.value;\n    }\n\n    if (!(this instanceof Comparator)) return new Comparator(comp, loose);\n    ;\n    this.loose = loose;\n    this.parse(comp);\n    if (this.semver === ANY) this.value = '';else this.value = this.operator + this.semver.version;\n    ;\n  }\n\n  var ANY = {};\n\n  Comparator.prototype.parse = function (comp) {\n    var r = this.loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n    var m = comp.match(r);\n    if (!m) throw new TypeError('Invalid comparator: ' + comp);\n    this.operator = m[1];\n    if (this.operator === '=') this.operator = ''; // if it literally is just '>' or '' then allow anything.\n\n    if (!m[2]) this.semver = ANY;else this.semver = new SemVer(m[2], this.loose);\n  };\n\n  Comparator.prototype.inspect = function () {\n    return '<SemVer Comparator \"' + this + '\">';\n  };\n\n  Comparator.prototype.toString = function () {\n    return this.value;\n  };\n\n  Comparator.prototype.test = function (version) {\n    ;\n    if (this.semver === ANY) return true;\n    if (typeof version === 'string') version = new SemVer(version, this.loose);\n    return cmp(version, this.operator, this.semver, this.loose);\n  };\n\n  exports.Range = Range;\n\n  function Range(range, loose) {\n    if (range instanceof Range && range.loose === loose) return range;\n    if (!(this instanceof Range)) return new Range(range, loose);\n    this.loose = loose; // First, split based on boolean or ||\n\n    this.raw = range;\n    this.set = range.split(/\\s*\\|\\|\\s*/).map(function (range) {\n      return this.parseRange(range.trim());\n    }, this).filter(function (c) {\n      // throw out any that are not relevant for whatever reason\n      return c.length;\n    });\n\n    if (!this.set.length) {\n      throw new TypeError('Invalid SemVer Range: ' + range);\n    }\n\n    this.format();\n  }\n\n  Range.prototype.inspect = function () {\n    return '<SemVer Range \"' + this.range + '\">';\n  };\n\n  Range.prototype.format = function () {\n    this.range = this.set.map(function (comps) {\n      return comps.join(' ').trim();\n    }).join('||').trim();\n    return this.range;\n  };\n\n  Range.prototype.toString = function () {\n    return this.range;\n  };\n\n  Range.prototype.parseRange = function (range) {\n    var loose = this.loose;\n    range = range.trim();\n    ; // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n\n    var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE];\n    range = range.replace(hr, hyphenReplace);\n    ; // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n\n    range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace);\n    ; // `~ 1.2.3` => `~1.2.3`\n\n    range = range.replace(re[TILDETRIM], tildeTrimReplace); // `^ 1.2.3` => `^1.2.3`\n\n    range = range.replace(re[CARETTRIM], caretTrimReplace); // normalize spaces\n\n    range = range.split(/\\s+/).join(' '); // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n    var set = range.split(' ').map(function (comp) {\n      return parseComparator(comp, loose);\n    }).join(' ').split(/\\s+/);\n\n    if (this.loose) {\n      // in loose mode, throw out any that are not valid comparators\n      set = set.filter(function (comp) {\n        return !!comp.match(compRe);\n      });\n    }\n\n    set = set.map(function (comp) {\n      return new Comparator(comp, loose);\n    });\n    return set;\n  }; // Mostly just for testing and legacy API reasons\n\n\n  exports.toComparators = toComparators;\n\n  function toComparators(range, loose) {\n    return new Range(range, loose).set.map(function (comp) {\n      return comp.map(function (c) {\n        return c.value;\n      }).join(' ').trim().split(' ');\n    });\n  } // comprised of xranges, tildes, stars, and gtlt's at this point.\n  // already replaced the hyphen ranges\n  // turn into a set of JUST comparators.\n\n\n  function parseComparator(comp, loose) {\n    ;\n    comp = replaceCarets(comp, loose);\n    ;\n    comp = replaceTildes(comp, loose);\n    ;\n    comp = replaceXRanges(comp, loose);\n    ;\n    comp = replaceStars(comp, loose);\n    ;\n    return comp;\n  }\n\n  function isX(id) {\n    return !id || id.toLowerCase() === 'x' || id === '*';\n  } // ~, ~> --> * (any, kinda silly)\n  // ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n  // ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n  // ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n  // ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n  // ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\n\n\n  function replaceTildes(comp, loose) {\n    return comp.trim().split(/\\s+/).map(function (comp) {\n      return replaceTilde(comp, loose);\n    }).join(' ');\n  }\n\n  function replaceTilde(comp, loose) {\n    var r = loose ? re[TILDELOOSE] : re[TILDE];\n    return comp.replace(r, function (_, M, m, p, pr) {\n      ;\n      var ret;\n      if (isX(M)) ret = '';else if (isX(m)) ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';else if (isX(p)) // ~1.2 == >=1.2.0- <1.3.0-\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';else if (pr) {\n        ;\n        if (pr.charAt(0) !== '-') pr = '-' + pr;\n        ret = '>=' + M + '.' + m + '.' + p + pr + ' <' + M + '.' + (+m + 1) + '.0';\n      } else // ~1.2.3 == >=1.2.3 <1.3.0\n        ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + (+m + 1) + '.0';\n      ;\n      return ret;\n    });\n  } // ^ --> * (any, kinda silly)\n  // ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n  // ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n  // ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n  // ^1.2.3 --> >=1.2.3 <2.0.0\n  // ^1.2.0 --> >=1.2.0 <2.0.0\n\n\n  function replaceCarets(comp, loose) {\n    return comp.trim().split(/\\s+/).map(function (comp) {\n      return replaceCaret(comp, loose);\n    }).join(' ');\n  }\n\n  function replaceCaret(comp, loose) {\n    ;\n    var r = loose ? re[CARETLOOSE] : re[CARET];\n    return comp.replace(r, function (_, M, m, p, pr) {\n      ;\n      var ret;\n      if (isX(M)) ret = '';else if (isX(m)) ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';else if (isX(p)) {\n        if (M === '0') ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';else ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0';\n      } else if (pr) {\n        ;\n        if (pr.charAt(0) !== '-') pr = '-' + pr;\n\n        if (M === '0') {\n          if (m === '0') ret = '>=' + M + '.' + m + '.' + p + pr + ' <' + M + '.' + m + '.' + (+p + 1);else ret = '>=' + M + '.' + m + '.' + p + pr + ' <' + M + '.' + (+m + 1) + '.0';\n        } else ret = '>=' + M + '.' + m + '.' + p + pr + ' <' + (+M + 1) + '.0.0';\n      } else {\n        ;\n\n        if (M === '0') {\n          if (m === '0') ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + m + '.' + (+p + 1);else ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + (+m + 1) + '.0';\n        } else ret = '>=' + M + '.' + m + '.' + p + ' <' + (+M + 1) + '.0.0';\n      }\n      ;\n      return ret;\n    });\n  }\n\n  function replaceXRanges(comp, loose) {\n    ;\n    return comp.split(/\\s+/).map(function (comp) {\n      return replaceXRange(comp, loose);\n    }).join(' ');\n  }\n\n  function replaceXRange(comp, loose) {\n    comp = comp.trim();\n    var r = loose ? re[XRANGELOOSE] : re[XRANGE];\n    return comp.replace(r, function (ret, gtlt, M, m, p, pr) {\n      ;\n      var xM = isX(M);\n      var xm = xM || isX(m);\n      var xp = xm || isX(p);\n      var anyX = xp;\n      if (gtlt === '=' && anyX) gtlt = '';\n\n      if (xM) {\n        if (gtlt === '>' || gtlt === '<') {\n          // nothing is allowed\n          ret = '<0.0.0';\n        } else {\n          // nothing is forbidden\n          ret = '*';\n        }\n      } else if (gtlt && anyX) {\n        // replace X with 0\n        if (xm) m = 0;\n        if (xp) p = 0;\n\n        if (gtlt === '>') {\n          // >1 => >=2.0.0\n          // >1.2 => >=1.3.0\n          // >1.2.3 => >= 1.2.4\n          gtlt = '>=';\n\n          if (xm) {\n            M = +M + 1;\n            m = 0;\n            p = 0;\n          } else if (xp) {\n            m = +m + 1;\n            p = 0;\n          }\n        } else if (gtlt === '<=') {\n          // <=0.7.x is actually <0.8.0, since any 0.7.x should\n          // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n          gtlt = '<';\n          if (xm) M = +M + 1;else m = +m + 1;\n        }\n\n        ret = gtlt + M + '.' + m + '.' + p;\n      } else if (xm) {\n        ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n      } else if (xp) {\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n      }\n\n      ;\n      return ret;\n    });\n  } // Because * is AND-ed with everything else in the comparator,\n  // and '' means \"any version\", just remove the *s entirely.\n\n\n  function replaceStars(comp, loose) {\n    ; // Looseness is ignored here.  star is always as loose as it gets!\n\n    return comp.trim().replace(re[STAR], '');\n  } // This function is passed to string.replace(re[HYPHENRANGE])\n  // M, m, patch, prerelease, build\n  // 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n  // 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n  // 1.2 - 3.4 => >=1.2.0 <3.5.0\n\n\n  function hyphenReplace($0, from, fM, fm, fp, fpr, fb, to, tM, tm, tp, tpr, tb) {\n    if (isX(fM)) from = '';else if (isX(fm)) from = '>=' + fM + '.0.0';else if (isX(fp)) from = '>=' + fM + '.' + fm + '.0';else from = '>=' + from;\n    if (isX(tM)) to = '';else if (isX(tm)) to = '<' + (+tM + 1) + '.0.0';else if (isX(tp)) to = '<' + tM + '.' + (+tm + 1) + '.0';else if (tpr) to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr;else to = '<=' + to;\n    return (from + ' ' + to).trim();\n  } // if ANY of the sets match ALL of its comparators, then pass\n\n\n  Range.prototype.test = function (version) {\n    if (!version) return false;\n    if (typeof version === 'string') version = new SemVer(version, this.loose);\n\n    for (var i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version)) return true;\n    }\n\n    return false;\n  };\n\n  function testSet(set, version) {\n    for (var i = 0; i < set.length; i++) {\n      if (!set[i].test(version)) return false;\n    }\n\n    if (version.prerelease.length) {\n      // Find the set of versions that are allowed to have prereleases\n      // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n      // That should allow `1.2.3-pr.2` to pass.\n      // However, `1.2.4-alpha.notready` should NOT be allowed,\n      // even though it's within the range set by the comparators.\n      for (var i = 0; i < set.length; i++) {\n        ;\n        if (set[i].semver === ANY) return true;\n\n        if (set[i].semver.prerelease.length > 0) {\n          var allowed = set[i].semver;\n          if (allowed.major === version.major && allowed.minor === version.minor && allowed.patch === version.patch) return true;\n        }\n      } // Version has a -pre, but it's not one of the ones we like.\n\n\n      return false;\n    }\n\n    return true;\n  }\n\n  exports.satisfies = satisfies;\n\n  function satisfies(version, range, loose) {\n    try {\n      range = new Range(range, loose);\n    } catch (er) {\n      return false;\n    }\n\n    return range.test(version);\n  }\n\n  exports.maxSatisfying = maxSatisfying;\n\n  function maxSatisfying(versions, range, loose) {\n    return versions.filter(function (version) {\n      return satisfies(version, range, loose);\n    }).sort(function (a, b) {\n      return rcompare(a, b, loose);\n    })[0] || null;\n  }\n\n  exports.validRange = validRange;\n\n  function validRange(range, loose) {\n    try {\n      // Return '*' instead of '' so that truthiness works.\n      // This will throw if it's invalid anyway\n      return new Range(range, loose).range || '*';\n    } catch (er) {\n      return null;\n    }\n  } // Determine if version is less than all the versions possible in the range\n\n\n  exports.ltr = ltr;\n\n  function ltr(version, range, loose) {\n    return outside(version, range, '<', loose);\n  } // Determine if version is greater than all the versions possible in the range.\n\n\n  exports.gtr = gtr;\n\n  function gtr(version, range, loose) {\n    return outside(version, range, '>', loose);\n  }\n\n  exports.outside = outside;\n\n  function outside(version, range, hilo, loose) {\n    version = new SemVer(version, loose);\n    range = new Range(range, loose);\n    var gtfn, ltefn, ltfn, comp, ecomp;\n\n    switch (hilo) {\n      case '>':\n        gtfn = gt;\n        ltefn = lte;\n        ltfn = lt;\n        comp = '>';\n        ecomp = '>=';\n        break;\n\n      case '<':\n        gtfn = lt;\n        ltefn = gte;\n        ltfn = gt;\n        comp = '<';\n        ecomp = '<=';\n        break;\n\n      default:\n        throw new TypeError('Must provide a hilo val of \"<\" or \">\"');\n    } // If it satisifes the range it is not outside\n\n\n    if (satisfies(version, range, loose)) {\n      return false;\n    } // From now on, variable terms are as if we're in \"gtr\" mode.\n    // but note that everything is flipped for the \"ltr\" function.\n\n\n    for (var i = 0; i < range.set.length; ++i) {\n      var comparators = range.set[i];\n      var high = null;\n      var low = null;\n      comparators.forEach(function (comparator) {\n        high = high || comparator;\n        low = low || comparator;\n\n        if (gtfn(comparator.semver, high.semver, loose)) {\n          high = comparator;\n        } else if (ltfn(comparator.semver, low.semver, loose)) {\n          low = comparator;\n        }\n      }); // If the edge version comparator has a operator then our version\n      // isn't outside it\n\n      if (high.operator === comp || high.operator === ecomp) {\n        return false;\n      } // If the lowest version comparator has an operator and our version\n      // is less than it then it isn't higher than the range\n\n\n      if ((!low.operator || low.operator === comp) && ltefn(version, low.semver)) {\n        return false;\n      } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n        return false;\n      }\n    }\n\n    return true;\n  } // Use the define() function if we're in AMD land\n\n\n  if (typeof define === 'function' && define.amd) define(exports);\n})(typeof exports === 'object' ? exports : typeof define === 'function' && define.amd ? {} : semver = {});","map":{"version":3,"sources":["/Users/dirkstahlecker/programming/word-frequencies-heroku/node_modules/pg/node_modules/semver/semver.browser.js"],"names":["exports","module","SemVer","SEMVER_SPEC_VERSION","MAX_LENGTH","MAX_SAFE_INTEGER","Number","re","src","R","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","MAINVERSION","MAINVERSIONLOOSE","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","PRERELEASE","PRERELEASELOOSE","BUILDIDENTIFIER","BUILD","FULL","FULLPLAIN","LOOSEPLAIN","LOOSE","GTLT","XRANGEIDENTIFIERLOOSE","XRANGEIDENTIFIER","XRANGEPLAIN","XRANGEPLAINLOOSE","XRANGE","XRANGELOOSE","LONETILDE","TILDETRIM","RegExp","tildeTrimReplace","TILDE","TILDELOOSE","LONECARET","CARETTRIM","caretTrimReplace","CARET","CARETLOOSE","COMPARATORLOOSE","COMPARATOR","COMPARATORTRIM","comparatorTrimReplace","HYPHENRANGE","HYPHENRANGELOOSE","STAR","i","parse","version","loose","length","r","test","er","valid","v","clean","s","trim","replace","TypeError","m","match","raw","major","minor","patch","prerelease","split","map","id","build","format","prototype","join","inspect","toString","compare","other","compareMain","comparePre","compareIdentifiers","a","b","undefined","inc","release","identifier","push","isNaN","Error","diff","version1","version2","eq","v1","v2","key","numeric","anum","bnum","rcompareIdentifiers","compareLoose","rcompare","sort","list","rsort","gt","lt","neq","gte","lte","cmp","op","ret","Comparator","comp","value","semver","ANY","operator","Range","range","set","parseRange","filter","c","comps","hr","hyphenReplace","compRe","parseComparator","toComparators","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","toLowerCase","replaceTilde","_","M","p","pr","charAt","replaceCaret","replaceXRange","gtlt","xM","xm","xp","anyX","$0","from","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","tb","testSet","allowed","satisfies","maxSatisfying","versions","validRange","ltr","outside","gtr","hilo","gtfn","ltefn","ltfn","ecomp","comparators","high","low","forEach","comparator","define","amd"],"mappings":"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","sourcesContent":[";(function(exports) {\n\n// export the class if we are in a Node-like system.\nif (typeof module === 'object' && module.exports === exports)\n  exports = module.exports = SemVer;\n\n// The debug function is excluded entirely from the minified version.\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0';\n\nvar MAX_LENGTH = 256;\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\n// The actual regexps go on exports.re\nvar re = exports.re = [];\nvar src = exports.src = [];\nvar R = 0;\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\nvar NUMERICIDENTIFIER = R++;\nsrc[NUMERICIDENTIFIER] = '0|[1-9]\\\\d*';\nvar NUMERICIDENTIFIERLOOSE = R++;\nsrc[NUMERICIDENTIFIERLOOSE] = '[0-9]+';\n\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\nvar NONNUMERICIDENTIFIER = R++;\nsrc[NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*';\n\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\nvar MAINVERSION = R++;\nsrc[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')';\n\nvar MAINVERSIONLOOSE = R++;\nsrc[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')';\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\nvar PRERELEASEIDENTIFIER = R++;\nsrc[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] +\n                            '|' + src[NONNUMERICIDENTIFIER] + ')';\n\nvar PRERELEASEIDENTIFIERLOOSE = R++;\nsrc[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[NONNUMERICIDENTIFIER] + ')';\n\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\nvar PRERELEASE = R++;\nsrc[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[PRERELEASEIDENTIFIER] + ')*))';\n\nvar PRERELEASELOOSE = R++;\nsrc[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))';\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\nvar BUILDIDENTIFIER = R++;\nsrc[BUILDIDENTIFIER] = '[0-9A-Za-z-]+';\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\nvar BUILD = R++;\nsrc[BUILD] = '(?:\\\\+(' + src[BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[BUILDIDENTIFIER] + ')*))';\n\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\nvar FULL = R++;\nvar FULLPLAIN = 'v?' + src[MAINVERSION] +\n                src[PRERELEASE] + '?' +\n                src[BUILD] + '?';\n\nsrc[FULL] = '^' + FULLPLAIN + '$';\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\nvar LOOSEPLAIN = '[v=\\\\s]*' + src[MAINVERSIONLOOSE] +\n                 src[PRERELEASELOOSE] + '?' +\n                 src[BUILD] + '?';\n\nvar LOOSE = R++;\nsrc[LOOSE] = '^' + LOOSEPLAIN + '$';\n\nvar GTLT = R++;\nsrc[GTLT] = '((?:<|>)?=?)';\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\nvar XRANGEIDENTIFIERLOOSE = R++;\nsrc[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*';\nvar XRANGEIDENTIFIER = R++;\nsrc[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\\\*';\n\nvar XRANGEPLAIN = R++;\nsrc[XRANGEPLAIN] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[PRERELEASE] + ')?' +\n                   src[BUILD] + '?' +\n                   ')?)?';\n\nvar XRANGEPLAINLOOSE = R++;\nsrc[XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[PRERELEASELOOSE] + ')?' +\n                        src[BUILD] + '?' +\n                        ')?)?';\n\nvar XRANGE = R++;\nsrc[XRANGE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAIN] + '$';\nvar XRANGELOOSE = R++;\nsrc[XRANGELOOSE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAINLOOSE] + '$';\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\nvar LONETILDE = R++;\nsrc[LONETILDE] = '(?:~>?)';\n\nvar TILDETRIM = R++;\nsrc[TILDETRIM] = '(\\\\s*)' + src[LONETILDE] + '\\\\s+';\nre[TILDETRIM] = new RegExp(src[TILDETRIM], 'g');\nvar tildeTrimReplace = '$1~';\n\nvar TILDE = R++;\nsrc[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$';\nvar TILDELOOSE = R++;\nsrc[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$';\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\nvar LONECARET = R++;\nsrc[LONECARET] = '(?:\\\\^)';\n\nvar CARETTRIM = R++;\nsrc[CARETTRIM] = '(\\\\s*)' + src[LONECARET] + '\\\\s+';\nre[CARETTRIM] = new RegExp(src[CARETTRIM], 'g');\nvar caretTrimReplace = '$1^';\n\nvar CARET = R++;\nsrc[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$';\nvar CARETLOOSE = R++;\nsrc[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$';\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\nvar COMPARATORLOOSE = R++;\nsrc[COMPARATORLOOSE] = '^' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + ')$|^$';\nvar COMPARATOR = R++;\nsrc[COMPARATOR] = '^' + src[GTLT] + '\\\\s*(' + FULLPLAIN + ')$|^$';\n\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\nvar COMPARATORTRIM = R++;\nsrc[COMPARATORTRIM] = '(\\\\s*)' + src[GTLT] +\n                      '\\\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')';\n\n// this one has to use the /g flag\nre[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g');\nvar comparatorTrimReplace = '$1$2$3';\n\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\nvar HYPHENRANGE = R++;\nsrc[HYPHENRANGE] = '^\\\\s*(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s*$';\n\nvar HYPHENRANGELOOSE = R++;\nsrc[HYPHENRANGELOOSE] = '^\\\\s*(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$';\n\n// Star ranges basically just allow anything at all.\nvar STAR = R++;\nsrc[STAR] = '(<|>)?=?\\\\s*\\\\*';\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  ;\n  if (!re[i])\n    re[i] = new RegExp(src[i]);\n}\n\nexports.parse = parse;\nfunction parse(version, loose) {\n  if (version.length > MAX_LENGTH)\n    return null;\n\n  var r = loose ? re[LOOSE] : re[FULL];\n  if (!r.test(version))\n    return null;\n\n  try {\n    return new SemVer(version, loose);\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.valid = valid;\nfunction valid(version, loose) {\n  var v = parse(version, loose);\n  return v ? v.version : null;\n}\n\n\nexports.clean = clean;\nfunction clean(version, loose) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), loose);\n  return s ? s.version : null;\n}\n\nexports.SemVer = SemVer;\n\nfunction SemVer(version, loose) {\n  if (version instanceof SemVer) {\n    if (version.loose === loose)\n      return version;\n    else\n      version = version.version;\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version);\n  }\n\n  if (version.length > MAX_LENGTH)\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n\n  if (!(this instanceof SemVer))\n    return new SemVer(version, loose);\n\n  ;\n  this.loose = loose;\n  var m = version.trim().match(loose ? re[LOOSE] : re[FULL]);\n\n  if (!m)\n    throw new TypeError('Invalid Version: ' + version);\n\n  this.raw = version;\n\n  // these are actually numbers\n  this.major = +m[1];\n  this.minor = +m[2];\n  this.patch = +m[3];\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0)\n    throw new TypeError('Invalid major version')\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0)\n    throw new TypeError('Invalid minor version')\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0)\n    throw new TypeError('Invalid patch version')\n\n  // numberify any prerelease numeric ids\n  if (!m[4])\n    this.prerelease = [];\n  else\n    this.prerelease = m[4].split('.').map(function(id) {\n      return (/^[0-9]+$/.test(id)) ? +id : id;\n    });\n\n  this.build = m[5] ? m[5].split('.') : [];\n  this.format();\n}\n\nSemVer.prototype.format = function() {\n  this.version = this.major + '.' + this.minor + '.' + this.patch;\n  if (this.prerelease.length)\n    this.version += '-' + this.prerelease.join('.');\n  return this.version;\n};\n\nSemVer.prototype.inspect = function() {\n  return '<SemVer \"' + this + '\">';\n};\n\nSemVer.prototype.toString = function() {\n  return this.version;\n};\n\nSemVer.prototype.compare = function(other) {\n  ;\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  return this.compareMain(other) || this.comparePre(other);\n};\n\nSemVer.prototype.compareMain = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch);\n};\n\nSemVer.prototype.comparePre = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length)\n    return -1;\n  else if (!this.prerelease.length && other.prerelease.length)\n    return 1;\n  else if (!this.prerelease.length && !other.prerelease.length)\n    return 0;\n\n  var i = 0;\n  do {\n    var a = this.prerelease[i];\n    var b = other.prerelease[i];\n    ;\n    if (a === undefined && b === undefined)\n      return 0;\n    else if (b === undefined)\n      return 1;\n    else if (a === undefined)\n      return -1;\n    else if (a === b)\n      continue;\n    else\n      return compareIdentifiers(a, b);\n  } while (++i);\n};\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function(release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor = 0;\n      this.major++;\n      this.inc('pre', identifier);\n      break;\n    case 'preminor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor++;\n      this.inc('pre', identifier);\n      break;\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0;\n      this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0)\n        this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0)\n        this.major++;\n      this.minor = 0;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0)\n        this.minor++;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0)\n        this.patch++;\n      this.prerelease = [];\n      break;\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0)\n        this.prerelease = [0];\n      else {\n        var i = this.prerelease.length;\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++;\n            i = -2;\n          }\n        }\n        if (i === -1) // didn't increment anything\n          this.prerelease.push(0);\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1]))\n            this.prerelease = [identifier, 0];\n        } else\n          this.prerelease = [identifier, 0];\n      }\n      break;\n\n    default:\n      throw new Error('invalid increment argument: ' + release);\n  }\n  this.format();\n  return this;\n};\n\nexports.inc = inc;\nfunction inc(version, release, loose, identifier) {\n  if (typeof(loose) === 'string') {\n    identifier = loose;\n    loose = undefined;\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version;\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.diff = diff;\nfunction diff(version1, version2) {\n  if (eq(version1, version2)) {\n    return null;\n  } else {\n    var v1 = parse(version1);\n    var v2 = parse(version2);\n    if (v1.prerelease.length || v2.prerelease.length) {\n      for (var key in v1) {\n        if (key === 'major' || key === 'minor' || key === 'patch') {\n          if (v1[key] !== v2[key]) {\n            return 'pre'+key;\n          }\n        }\n      }\n      return 'prerelease';\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return key;\n        }\n      }\n    }\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers;\n\nvar numeric = /^[0-9]+$/;\nfunction compareIdentifiers(a, b) {\n  var anum = numeric.test(a);\n  var bnum = numeric.test(b);\n\n  if (anum && bnum) {\n    a = +a;\n    b = +b;\n  }\n\n  return (anum && !bnum) ? -1 :\n         (bnum && !anum) ? 1 :\n         a < b ? -1 :\n         a > b ? 1 :\n         0;\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers;\nfunction rcompareIdentifiers(a, b) {\n  return compareIdentifiers(b, a);\n}\n\nexports.major = major;\nfunction major(a, loose) {\n  return new SemVer(a, loose).major;\n}\n\nexports.minor = minor;\nfunction minor(a, loose) {\n  return new SemVer(a, loose).minor;\n}\n\nexports.patch = patch;\nfunction patch(a, loose) {\n  return new SemVer(a, loose).patch;\n}\n\nexports.compare = compare;\nfunction compare(a, b, loose) {\n  return new SemVer(a, loose).compare(b);\n}\n\nexports.compareLoose = compareLoose;\nfunction compareLoose(a, b) {\n  return compare(a, b, true);\n}\n\nexports.rcompare = rcompare;\nfunction rcompare(a, b, loose) {\n  return compare(b, a, loose);\n}\n\nexports.sort = sort;\nfunction sort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.compare(a, b, loose);\n  });\n}\n\nexports.rsort = rsort;\nfunction rsort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.rcompare(a, b, loose);\n  });\n}\n\nexports.gt = gt;\nfunction gt(a, b, loose) {\n  return compare(a, b, loose) > 0;\n}\n\nexports.lt = lt;\nfunction lt(a, b, loose) {\n  return compare(a, b, loose) < 0;\n}\n\nexports.eq = eq;\nfunction eq(a, b, loose) {\n  return compare(a, b, loose) === 0;\n}\n\nexports.neq = neq;\nfunction neq(a, b, loose) {\n  return compare(a, b, loose) !== 0;\n}\n\nexports.gte = gte;\nfunction gte(a, b, loose) {\n  return compare(a, b, loose) >= 0;\n}\n\nexports.lte = lte;\nfunction lte(a, b, loose) {\n  return compare(a, b, loose) <= 0;\n}\n\nexports.cmp = cmp;\nfunction cmp(a, op, b, loose) {\n  var ret;\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a === b;\n      break;\n    case '!==':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a !== b;\n      break;\n    case '': case '=': case '==': ret = eq(a, b, loose); break;\n    case '!=': ret = neq(a, b, loose); break;\n    case '>': ret = gt(a, b, loose); break;\n    case '>=': ret = gte(a, b, loose); break;\n    case '<': ret = lt(a, b, loose); break;\n    case '<=': ret = lte(a, b, loose); break;\n    default: throw new TypeError('Invalid operator: ' + op);\n  }\n  return ret;\n}\n\nexports.Comparator = Comparator;\nfunction Comparator(comp, loose) {\n  if (comp instanceof Comparator) {\n    if (comp.loose === loose)\n      return comp;\n    else\n      comp = comp.value;\n  }\n\n  if (!(this instanceof Comparator))\n    return new Comparator(comp, loose);\n\n  ;\n  this.loose = loose;\n  this.parse(comp);\n\n  if (this.semver === ANY)\n    this.value = '';\n  else\n    this.value = this.operator + this.semver.version;\n\n  ;\n}\n\nvar ANY = {};\nComparator.prototype.parse = function(comp) {\n  var r = this.loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var m = comp.match(r);\n\n  if (!m)\n    throw new TypeError('Invalid comparator: ' + comp);\n\n  this.operator = m[1];\n  if (this.operator === '=')\n    this.operator = '';\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2])\n    this.semver = ANY;\n  else\n    this.semver = new SemVer(m[2], this.loose);\n};\n\nComparator.prototype.inspect = function() {\n  return '<SemVer Comparator \"' + this + '\">';\n};\n\nComparator.prototype.toString = function() {\n  return this.value;\n};\n\nComparator.prototype.test = function(version) {\n  ;\n\n  if (this.semver === ANY)\n    return true;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.loose);\n\n  return cmp(version, this.operator, this.semver, this.loose);\n};\n\n\nexports.Range = Range;\nfunction Range(range, loose) {\n  if ((range instanceof Range) && range.loose === loose)\n    return range;\n\n  if (!(this instanceof Range))\n    return new Range(range, loose);\n\n  this.loose = loose;\n\n  // First, split based on boolean or ||\n  this.raw = range;\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function(range) {\n    return this.parseRange(range.trim());\n  }, this).filter(function(c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length;\n  });\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range);\n  }\n\n  this.format();\n}\n\nRange.prototype.inspect = function() {\n  return '<SemVer Range \"' + this.range + '\">';\n};\n\nRange.prototype.format = function() {\n  this.range = this.set.map(function(comps) {\n    return comps.join(' ').trim();\n  }).join('||').trim();\n  return this.range;\n};\n\nRange.prototype.toString = function() {\n  return this.range;\n};\n\nRange.prototype.parseRange = function(range) {\n  var loose = this.loose;\n  range = range.trim();\n  ;\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE];\n  range = range.replace(hr, hyphenReplace);\n  ;\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace);\n  ;\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(re[TILDETRIM], tildeTrimReplace);\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(re[CARETTRIM], caretTrimReplace);\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ');\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var set = range.split(' ').map(function(comp) {\n    return parseComparator(comp, loose);\n  }).join(' ').split(/\\s+/);\n  if (this.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function(comp) {\n      return !!comp.match(compRe);\n    });\n  }\n  set = set.map(function(comp) {\n    return new Comparator(comp, loose);\n  });\n\n  return set;\n};\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators;\nfunction toComparators(range, loose) {\n  return new Range(range, loose).set.map(function(comp) {\n    return comp.map(function(c) {\n      return c.value;\n    }).join(' ').trim().split(' ');\n  });\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator(comp, loose) {\n  ;\n  comp = replaceCarets(comp, loose);\n  ;\n  comp = replaceTildes(comp, loose);\n  ;\n  comp = replaceXRanges(comp, loose);\n  ;\n  comp = replaceStars(comp, loose);\n  ;\n  return comp;\n}\n\nfunction isX(id) {\n  return !id || id.toLowerCase() === 'x' || id === '*';\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes(comp, loose) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceTilde(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceTilde(comp, loose) {\n  var r = loose ? re[TILDELOOSE] : re[TILDE];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    ;\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p))\n      // ~1.2 == >=1.2.0- <1.3.0-\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    else if (pr) {\n      ;\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      ret = '>=' + M + '.' + m + '.' + p + pr +\n            ' <' + M + '.' + (+m + 1) + '.0';\n    } else\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0';\n\n    ;\n    return ret;\n  });\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets(comp, loose) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceCaret(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceCaret(comp, loose) {\n  ;\n  var r = loose ? re[CARETLOOSE] : re[CARET];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    ;\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p)) {\n      if (M === '0')\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n      else\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0';\n    } else if (pr) {\n      ;\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p + pr +\n              ' <' + (+M + 1) + '.0.0';\n    } else {\n      ;\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0';\n    }\n\n    ;\n    return ret;\n  });\n}\n\nfunction replaceXRanges(comp, loose) {\n  ;\n  return comp.split(/\\s+/).map(function(comp) {\n    return replaceXRange(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceXRange(comp, loose) {\n  comp = comp.trim();\n  var r = loose ? re[XRANGELOOSE] : re[XRANGE];\n  return comp.replace(r, function(ret, gtlt, M, m, p, pr) {\n    ;\n    var xM = isX(M);\n    var xm = xM || isX(m);\n    var xp = xm || isX(p);\n    var anyX = xp;\n\n    if (gtlt === '=' && anyX)\n      gtlt = '';\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0';\n      } else {\n        // nothing is forbidden\n        ret = '*';\n      }\n    } else if (gtlt && anyX) {\n      // replace X with 0\n      if (xm)\n        m = 0;\n      if (xp)\n        p = 0;\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>=';\n        if (xm) {\n          M = +M + 1;\n          m = 0;\n          p = 0;\n        } else if (xp) {\n          m = +m + 1;\n          p = 0;\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm)\n          M = +M + 1\n        else\n          m = +m + 1\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p;\n    } else if (xm) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    }\n\n    ;\n\n    return ret;\n  });\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars(comp, loose) {\n  ;\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[STAR], '');\n}\n\n// This function is passed to string.replace(re[HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace($0,\n                       from, fM, fm, fp, fpr, fb,\n                       to, tM, tm, tp, tpr, tb) {\n\n  if (isX(fM))\n    from = '';\n  else if (isX(fm))\n    from = '>=' + fM + '.0.0';\n  else if (isX(fp))\n    from = '>=' + fM + '.' + fm + '.0';\n  else\n    from = '>=' + from;\n\n  if (isX(tM))\n    to = '';\n  else if (isX(tm))\n    to = '<' + (+tM + 1) + '.0.0';\n  else if (isX(tp))\n    to = '<' + tM + '.' + (+tm + 1) + '.0';\n  else if (tpr)\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr;\n  else\n    to = '<=' + to;\n\n  return (from + ' ' + to).trim();\n}\n\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function(version) {\n  if (!version)\n    return false;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.loose);\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version))\n      return true;\n  }\n  return false;\n};\n\nfunction testSet(set, version) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version))\n      return false;\n  }\n\n  if (version.prerelease.length) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (var i = 0; i < set.length; i++) {\n      ;\n      if (set[i].semver === ANY)\n        return true;\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver;\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch)\n          return true;\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false;\n  }\n\n  return true;\n}\n\nexports.satisfies = satisfies;\nfunction satisfies(version, range, loose) {\n  try {\n    range = new Range(range, loose);\n  } catch (er) {\n    return false;\n  }\n  return range.test(version);\n}\n\nexports.maxSatisfying = maxSatisfying;\nfunction maxSatisfying(versions, range, loose) {\n  return versions.filter(function(version) {\n    return satisfies(version, range, loose);\n  }).sort(function(a, b) {\n    return rcompare(a, b, loose);\n  })[0] || null;\n}\n\nexports.validRange = validRange;\nfunction validRange(range, loose) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, loose).range || '*';\n  } catch (er) {\n    return null;\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr;\nfunction ltr(version, range, loose) {\n  return outside(version, range, '<', loose);\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr;\nfunction gtr(version, range, loose) {\n  return outside(version, range, '>', loose);\n}\n\nexports.outside = outside;\nfunction outside(version, range, hilo, loose) {\n  version = new SemVer(version, loose);\n  range = new Range(range, loose);\n\n  var gtfn, ltefn, ltfn, comp, ecomp;\n  switch (hilo) {\n    case '>':\n      gtfn = gt;\n      ltefn = lte;\n      ltfn = lt;\n      comp = '>';\n      ecomp = '>=';\n      break;\n    case '<':\n      gtfn = lt;\n      ltefn = gte;\n      ltfn = gt;\n      comp = '<';\n      ecomp = '<=';\n      break;\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"');\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, loose)) {\n    return false;\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i];\n\n    var high = null;\n    var low = null;\n\n    comparators.forEach(function(comparator) {\n      high = high || comparator;\n      low = low || comparator;\n      if (gtfn(comparator.semver, high.semver, loose)) {\n        high = comparator;\n      } else if (ltfn(comparator.semver, low.semver, loose)) {\n        low = comparator;\n      }\n    });\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false;\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false;\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Use the define() function if we're in AMD land\nif (typeof define === 'function' && define.amd)\n  define(exports);\n\n})(\n  typeof exports === 'object' ? exports :\n  typeof define === 'function' && define.amd ? {} :\n  semver = {}\n);\n"]},"metadata":{},"sourceType":"script"}