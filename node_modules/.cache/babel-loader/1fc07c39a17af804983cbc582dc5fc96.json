{"ast":null,"code":"//stores a markup object\nexport class Markup {\n  constructor() {\n    this._displayName = void 0;\n    this._firstName = void 0;\n    this._lastName = void 0;\n  }\n\n  static create(displayName, firstName, lastName) {\n    this._firstName = firstName;\n    this._lastName = lastName;\n    this._displayName = displayName;\n  }\n\n  static create(rawString) {\n    const pieces = MarkupUtils.getMarkupPieces(rawText);\n\n    if (pieces == null || pieces.length !== 4) {\n      return null;\n    }\n\n    this._displayName = pieces[1];\n    this._firstName = pieces[2];\n    this._lastName = pieces[3];\n  }\n\n  get firstName() {\n    return this._firstName;\n  }\n\n  get lastName() {\n    return this._lastName;\n  }\n\n  get displayName() {\n    return this._displayName;\n  }\n\n}\nMarkup.MARKUP_REGEX = /\\[!!([^\\|]+)\\|([^_]+)_([^!]+)!!\\]/;","map":{"version":3,"sources":["/Users/dirkstahlecker/programming/word-frequencies-heroku/src/stats/Markup.ts"],"names":["Markup","_displayName","_firstName","_lastName","create","displayName","firstName","lastName","rawString","pieces","MarkupUtils","getMarkupPieces","rawText","length","MARKUP_REGEX"],"mappings":"AAAA;AACA,OAAO,MAAeA,MAAf,CACP;AAAA;AAAA,SAIUC,YAJV;AAAA,SAKUC,UALV;AAAA,SAMUC,SANV;AAAA;;AAQE,SAAcC,MAAd,CAAqBC,WAArB,EAA0CC,SAA1C,EAA6DC,QAA7D,EACA;AACE,SAAKL,UAAL,GAAkBI,SAAlB;AACA,SAAKH,SAAL,GAAiBI,QAAjB;AACA,SAAKN,YAAL,GAAoBI,WAApB;AACD;;AAED,SAAcD,MAAd,CAAqBI,SAArB,EACA;AACE,UAAMC,MAA8B,GAAGC,WAAW,CAACC,eAAZ,CAA4BC,OAA5B,CAAvC;;AACA,QAAIH,MAAM,IAAI,IAAV,IAAkBA,MAAM,CAACI,MAAP,KAAkB,CAAxC,EACA;AACE,aAAO,IAAP;AACD;;AAED,SAAKZ,YAAL,GAAoBQ,MAAM,CAAC,CAAD,CAA1B;AACA,SAAKP,UAAL,GAAkBO,MAAM,CAAC,CAAD,CAAxB;AACA,SAAKN,SAAL,GAAiBM,MAAM,CAAC,CAAD,CAAvB;AACD;;AAED,MAAWH,SAAX,GACA;AACE,WAAO,KAAKJ,UAAZ;AACD;;AAED,MAAWK,QAAX,GACA;AACE,WAAO,KAAKJ,SAAZ;AACD;;AAED,MAAWE,WAAX,GACA;AACE,WAAO,KAAKJ,YAAZ;AACD;;AAzCH;AADsBD,M,CAGPc,Y,GAAe,mC","sourcesContent":["//stores a markup object\nexport abstract class Markup\n{\n  //eslint-disable-next-line no-useless-escape\n\tpublic static MARKUP_REGEX = /\\[!!([^\\|]+)\\|([^_]+)_([^!]+)!!\\]/;\n\n  private _displayName: string;\n  private _firstName: string;\n  private _lastName: string;\n\n  public static create(displayName: string, firstName: string, lastName: string)\n  {\n    this._firstName = firstName;\n    this._lastName = lastName;\n    this._displayName = displayName;\n  }\n\n  public static create(rawString: string)\n  {\n    const pieces: RegExpExecArray | null = MarkupUtils.getMarkupPieces(rawText);\n    if (pieces == null || pieces.length !== 4)\n    {\n      return null\n    }\n\n    this._displayName = pieces[1];\n    this._firstName = pieces[2];\n    this._lastName = pieces[3];\n  }\n\n  public get firstName(): string\n  {\n    return this._firstName;\n  }\n\n  public get lastName(): string\n  {\n    return this._lastName;\n  }\n\n  public get displayName(): string\n  {\n    return this._displayName;\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module"}