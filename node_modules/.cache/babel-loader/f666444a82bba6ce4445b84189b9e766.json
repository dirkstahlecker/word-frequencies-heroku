{"ast":null,"code":"import React, { Component } from 'react';\nimport { Element } from 'react-faux-dom';\nimport * as d3 from 'd3';\nimport './App.css';\nimport data from './data';\n\nclass D3BarApp extends Component {\n  plot(chart, width, height) {\n    // create scales!\n    const xScale = d3.scaleBand().domain(data.map(d => d.country)).range([0, width]);\n    const yScale = d3.scaleLinear().domain([0, d3.max(data, d => d.value)]).range([height, 0]);\n    const colorScale = d3.scaleOrdinal(d3.schemeCategory10);\n    chart.selectAll('.bar').data(data).enter().append('rect').classed('bar', true).attr('x', d => xScale(d.country)).attr('y', d => yScale(d.value)).attr('height', d => height - yScale(d.value)).attr('width', d => xScale.bandwidth()).style('fill', (d, i) => colorScale(i));\n    chart.selectAll('.bar-label').data(data).enter().append('text').classed('bar-label', true).attr('x', d => xScale(d.country) + xScale.bandwidth() / 2).attr('dx', 0).attr('y', d => yScale(d.value)).attr('dy', -6).text(d => d.value);\n    const xAxis = d3.axisBottom().scale(xScale);\n    chart.append('g').classed('x axis', true).attr('transform', `translate(0,${height})`).call(xAxis);\n    const yAxis = d3.axisLeft().ticks(5).scale(yScale);\n    chart.append('g').classed('y axis', true).attr('transform', 'translate(0,0)').call(yAxis);\n    chart.select('.x.axis').append('text').attr('x', width / 2).attr('y', 60).attr('fill', '#000').style('font-size', '20px').style('text-anchor', 'middle').text('Country');\n    chart.select('.y.axis').append('text').attr('x', 0).attr('y', 0).attr('transform', `translate(-50, ${height / 2}) rotate(-90)`).attr('fill', '#000').style('font-size', '20px').style('text-anchor', 'middle').text('Government Expenditure in Billion Dollars');\n    const yGridlines = d3.axisLeft().scale(yScale).ticks(5).tickSize(-width, 0, 0).tickFormat('');\n    chart.append('g').call(yGridlines).classed('gridline', true);\n  }\n\n  drawChart() {\n    const width = 800;\n    const height = 450;\n    const el = new Element('div');\n    const svg = d3.select(el).append('svg').attr('id', 'chart').attr('width', width).attr('height', height);\n    const margin = {\n      top: 60,\n      bottom: 100,\n      left: 80,\n      right: 40\n    };\n    const chart = svg.append('g').classed('display', true).attr('transform', `translate(${margin.left},${margin.top})`);\n    const chartWidth = width - margin.left - margin.right;\n    const chartHeight = height - margin.top - margin.bottom;\n    this.plot(chart, chartWidth, chartHeight);\n    return el.toReact();\n  }\n\n  render() {\n    return this.drawChart();\n  }\n\n}\n\nexport default D3BarApp;","map":{"version":3,"sources":["/Users/dirkstahlecker/programming/word-frequencies-heroku/src/d3/d3bar/App.js"],"names":["React","Component","Element","d3","data","D3BarApp","plot","chart","width","height","xScale","scaleBand","domain","map","d","country","range","yScale","scaleLinear","max","value","colorScale","scaleOrdinal","schemeCategory10","selectAll","enter","append","classed","attr","bandwidth","style","i","text","xAxis","axisBottom","scale","call","yAxis","axisLeft","ticks","select","yGridlines","tickSize","tickFormat","drawChart","el","svg","margin","top","bottom","left","right","chartWidth","chartHeight","toReact","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Element } from 'react-faux-dom';\nimport * as d3 from 'd3';\nimport './App.css';\nimport data from './data';\n\nclass D3BarApp extends Component {\n\n    plot(chart, width, height) {\n        // create scales!\n        const xScale = d3.scaleBand()\n            .domain(data.map(d => d.country))\n            .range([0, width]);\n        const yScale = d3.scaleLinear()\n            .domain([0, d3.max(data, d => d.value)])\n            .range([height, 0]);\n        const colorScale = d3.scaleOrdinal(d3.schemeCategory10);\n\n        chart.selectAll('.bar')\n            .data(data)\n            .enter()\n            .append('rect')\n            .classed('bar', true)\n            .attr('x', d => xScale(d.country))\n            .attr('y', d => yScale(d.value))\n            .attr('height', d => (height - yScale(d.value)))\n            .attr('width', d => xScale.bandwidth())\n            .style('fill', (d, i) => colorScale(i));\n\n        chart.selectAll('.bar-label')\n            .data(data)\n            .enter()\n            .append('text')\n            .classed('bar-label', true)\n            .attr('x', d => xScale(d.country) + xScale.bandwidth()/2)\n            .attr('dx', 0)\n            .attr('y', d => yScale(d.value))\n            .attr('dy', -6)\n            .text(d => d.value);\n\n        const xAxis = d3.axisBottom()\n            .scale(xScale);\n\n        chart.append('g')\n            .classed('x axis', true)\n            .attr('transform', `translate(0,${height})`)\n            .call(xAxis);\n\n        const yAxis = d3.axisLeft()\n            .ticks(5)\n            .scale(yScale);\n\n        chart.append('g')\n            .classed('y axis', true)\n            .attr('transform', 'translate(0,0)')\n            .call(yAxis);\n\n        chart.select('.x.axis')\n            .append('text')\n            .attr('x',  width/2)\n            .attr('y', 60)\n            .attr('fill', '#000')\n            .style('font-size', '20px')\n            .style('text-anchor', 'middle')\n            .text('Country');\n\n        chart.select('.y.axis')\n            .append('text')\n            .attr('x', 0)\n            .attr('y', 0)\n            .attr('transform', `translate(-50, ${height/2}) rotate(-90)`)\n            .attr('fill', '#000')\n            .style('font-size', '20px')\n            .style('text-anchor', 'middle')\n            .text('Government Expenditure in Billion Dollars');\n\n        const yGridlines = d3.axisLeft()\n            .scale(yScale)\n            .ticks(5)\n            .tickSize(-width,0,0)\n            .tickFormat('')\n\n        chart.append('g')\n            .call(yGridlines)\n            .classed('gridline', true);\n    }\n\n    drawChart() {\n        const width = 800;\n        const height = 450;\n\n        const el = new Element('div');\n        const svg = d3.select(el)\n            .append('svg')\n            .attr('id', 'chart')\n            .attr('width', width)\n            .attr('height', height);\n\n        const margin = {\n            top: 60,\n            bottom: 100,\n            left: 80,\n            right: 40\n        };\n\n        const chart = svg.append('g')\n            .classed('display', true)\n            .attr('transform', `translate(${margin.left},${margin.top})`);\n\n        const chartWidth = width - margin.left - margin.right;\n        const chartHeight = height - margin.top - margin.bottom\n        this.plot(chart, chartWidth, chartHeight);\n\n        return el.toReact();\n    }\n\n    render() {\n        return this.drawChart();\n    }\n}\n\nexport default D3BarApp;\n"]},"metadata":{},"sourceType":"module"}