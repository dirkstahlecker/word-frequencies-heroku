{"ast":null,"code":"import _initializerDefineProperty from \"/Users/dirkstahlecker/programming/word-frequencies-heroku/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/dirkstahlecker/programming/word-frequencies-heroku/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/dirkstahlecker/programming/word-frequencies-heroku/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class,\n    _descriptor,\n    _descriptor2,\n    _descriptor3,\n    _descriptor4,\n    _temp,\n    _class3,\n    _class4,\n    _descriptor5,\n    _temp2,\n    _jsxFileName = \"/Users/dirkstahlecker/programming/word-frequencies-heroku/src/App.tsx\";\n\nimport * as React from \"react\";\nimport { observable, action, runInAction } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport { JournalReader, JournalReaderMachine } from \"./JournalReader\";\nimport { JournalWriter } from \"./JournalWriter\"; // import * as Modal from \"react-modal\";\n\nimport Modal from \"react-modal\";\nimport { AddMarkupMachine } from \"./AddMarkupToExistingEntry\"; // import {Editor, EditorState} from 'draft-js';\n\nimport axios from 'axios'; // const { Client } = require('pg');\n// const client = new Client({\n//   connectionString: process.env.DATABASE_URL,\n//   ssl: true,\n// });\n// client.connect();\n// client.query('SELECT table_schema,table_name FROM information_schema.tables;', (err, res) => {\n//   if (err) throw err;\n//   for (let row of res.rows) {\n//     console.log(JSON.stringify(row));\n//   }\n//   client.end();\n// });\n\nModal.setAppElement(document.getElementById('root'));\nexport let AppMachine = (_class = (_temp = class AppMachine {\n  constructor() {\n    _initializerDefineProperty(this, \"currentName\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"finalText\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"newJournalEntry\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"showDisplayJournalPlace\", _descriptor4, this);\n\n    this.addMarkupMachine = new AddMarkupMachine();\n    this.journalReaderMachine = new JournalReaderMachine();\n\n    this.handleEasyMarkupGeneratorSubmit = () => {// document.getElementById(\"firstName\");\n      // let firstName: string | null = (document.getElementById(\"firstName\") as HTMLElement);\n      // let lastName: string = document.getElementById(\"lastName\").value as string;\n      // let displayName: string = document.getElementById(\"displayName\").value as string;\n      // this.currentMarkupHack = MarkupUtils.makeMarkup(firstName, lastName, displayName);\n      // document.getElementById(\"placeToSelectText\").value = this.currentMarkupHack;\n      // var copyText = document.getElementById(\"displayCopyArea\") as HTMLElement;\n      // this.selectElementContents(copyText);\n      // document.execCommand(\"copy\");\n      // document.getElementById(\"firstName\").value = \"\";\n      // document.getElementById(\"firstName\").focus();\n      // document.getElementById(\"lastName\").value = \"\";\n      // document.getElementById(\"displayName\").value = \"\";\n    };\n  }\n\n  setCurrentName(value) {\n    this.currentName = value;\n  } //TODO: this hasn't been tested without jquery\n  // private legalLetters: string[] = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\",\n  // \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"-\", \"'\", \"\\\"\"];\n\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"currentName\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"finalText\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"\";\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"newJournalEntry\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return true;\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"showDisplayJournalPlace\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"setCurrentName\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setCurrentName\"), _class.prototype)), _class);\nexport let App = observer(_class3 = (_class4 = (_temp2 = class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _initializerDefineProperty(this, \"currentMarkupHack\", _descriptor5, this);\n  }\n\n  selectElementContents(el) {\n    var range = document.createRange();\n    range.selectNodeContents(el);\n    var sel = window.getSelection();\n\n    if (sel == null) {\n      return;\n    }\n\n    sel.removeAllRanges();\n    sel.addRange(range);\n  }\n\n  makeRequest() {\n    axios.request({\n      url: 'localhost:8765' // transformResponse: (r: PersonSchema) => r.data\n\n    }).then(response => {\n      // `response` is of type `AxiosResponse<ServerData>`\n      // const { data } = response\n      // `data` is of type ServerData, correctly inferred\n      console.log(response.firstName);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        width: \"100%\",\n        height: \"100%\",\n        display: \"inline-block\",\n        verticalAlign: \"top\"\n      },\n      tabIndex: 0,\n      id: \"mainApp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.makeRequest(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }, \"TEST\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => runInAction(() => this.props.machine.newJournalEntry = !this.props.machine.newJournalEntry),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }, this.props.machine.newJournalEntry ? \"Add markup to existing entry\" : \"Create new journal entry\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => runInAction(() => this.props.machine.showDisplayJournalPlace = !this.props.machine.showDisplayJournalPlace),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }, \"Read journal\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"50%\",\n        display: \"inline-block\",\n        verticalAlign: \"top\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }, this.props.machine.newJournalEntry && !this.props.machine.showDisplayJournalPlace && /*#__PURE__*/React.createElement(JournalWriter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }), !this.props.machine.newJournalEntry && //           {/*<AddMarkupToExistingEntry machine={this.props.machine.addMarkupMachine} />*/}\n    !this.props.machine.showDisplayJournalPlace && /*#__PURE__*/React.createElement(\"div\", {\n      onKeyDown: e => {\n        if (e.key === \"Enter\") {\n          e.preventDefault();\n          this.props.machine.handleEasyMarkupGeneratorSubmit();\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, \"First Name: \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"firstName\",\n      autoFocus: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 15\n      }\n    }), \"Last Name: \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"lastName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 15\n      }\n    }), \"Display Name: \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"displayName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.props.machine.handleEasyMarkupGeneratorSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 15\n      }\n    }, \"Submit\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"displayCopyArea\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"placeToSelectText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    }))), this.props.machine.showDisplayJournalPlace && /*#__PURE__*/React.createElement(JournalReader, {\n      machine: this.props.machine.journalReaderMachine,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"50%\",\n        display: \"inline-block\",\n        verticalAlign: \"top\",\n        whiteSpace: \"pre-wrap\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }\n    }, this.props.machine.finalText));\n  }\n\n}, _temp2), (_descriptor5 = _applyDecoratedDescriptor(_class4.prototype, \"currentMarkupHack\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"\";\n  }\n})), _class4)) || _class3;\n// @observer\n// class MyEditor extends React.Component<EditorProps>\n// {\n//   @observable editorState = EditorState.createEmpty();\n//   constructor(props: EditorProps)\n//   {\n//     super(props);\n//     // this.state = {editorState: EditorState.createEmpty()};\n//     // this.onChange = (editorState) => this.setState({editorState});\n//   }\n//   @action\n//   private onChange = (editorState: any): void => {\n//     this.editorState = editorState;\n//   }\n//   public render() \n//   {\n//     return (\n//         <Editor editorState={this.editorState} onChange={this.onChange} />\n//     );\n//   }\n// }\nexport default App;\n/*\nBUGS\n-have to write in chonological order - can't jump around with names, since they only add to end\n-need to have a story for name picker cancel\n-case sensitive (name popup only when name is capitalized) - or maybe only for particular names that are also common words (will)\n\n\nFEATURES\n-\n*/","map":{"version":3,"sources":["/Users/dirkstahlecker/programming/word-frequencies-heroku/src/App.tsx"],"names":["React","observable","action","runInAction","observer","JournalReader","JournalReaderMachine","JournalWriter","Modal","AddMarkupMachine","axios","setAppElement","document","getElementById","AppMachine","addMarkupMachine","journalReaderMachine","handleEasyMarkupGeneratorSubmit","setCurrentName","value","currentName","App","Component","selectElementContents","el","range","createRange","selectNodeContents","sel","window","getSelection","removeAllRanges","addRange","makeRequest","request","url","then","response","console","log","firstName","render","width","height","display","verticalAlign","props","machine","newJournalEntry","showDisplayJournalPlace","e","key","preventDefault","whiteSpace","finalText"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {NameReference} from \"./NameReference\";\nimport {observable, action, runInAction, computed} from \"mobx\";\nimport {observer} from \"mobx-react\";\nimport {MarkupUtils} from \"./MarkupUtils\";\nimport {JournalReader, JournalReaderMachine} from \"./JournalReader\";\nimport {JournalWriter} from \"./JournalWriter\";\n// import * as Modal from \"react-modal\";\nimport Modal from \"react-modal\";\nimport {AddMarkupMachine} from \"./AddMarkupToExistingEntry\";\n// import {Editor, EditorState} from 'draft-js';\nimport axios from 'axios';\n\n\n\n// const { Client } = require('pg');\n\n// const client = new Client({\n//   connectionString: process.env.DATABASE_URL,\n//   ssl: true,\n// });\n\n// client.connect();\n\n// client.query('SELECT table_schema,table_name FROM information_schema.tables;', (err, res) => {\n//   if (err) throw err;\n//   for (let row of res.rows) {\n//     console.log(JSON.stringify(row));\n//   }\n//   client.end();\n// });\n\n\n\nModal.setAppElement(document.getElementById('root')!!);\n\ninterface PersonSchema\n{\n  firstName: String,\n  lastName: String,\n  displayName: String\n}\n\nexport class AppMachine\n{\n\n  @observable\n  public currentName: string | null = null;\n\n  @observable\n  public finalText: string = \"\";\n\n  @observable\n  public newJournalEntry: boolean = true;\n\n  @observable\n  public showDisplayJournalPlace: boolean = false;\n\n  public addMarkupMachine: AddMarkupMachine = new AddMarkupMachine();\n\n  public journalReaderMachine: JournalReaderMachine = new JournalReaderMachine();\n\n  @action\n  public setCurrentName(value: string | null): void\n  {\n    this.currentName = value;\n  }\n\n\n\n    //TODO: this hasn't been tested without jquery\n  public handleEasyMarkupGeneratorSubmit = (): void => {\n    // document.getElementById(\"firstName\");\n    // let firstName: string | null = (document.getElementById(\"firstName\") as HTMLElement);\n    // let lastName: string = document.getElementById(\"lastName\").value as string;\n    // let displayName: string = document.getElementById(\"displayName\").value as string;\n\n    // this.currentMarkupHack = MarkupUtils.makeMarkup(firstName, lastName, displayName);\n    // document.getElementById(\"placeToSelectText\").value = this.currentMarkupHack;\n\n    // var copyText = document.getElementById(\"displayCopyArea\") as HTMLElement;\n    // this.selectElementContents(copyText);\n    // document.execCommand(\"copy\");\n\n    // document.getElementById(\"firstName\").value = \"\";\n    // document.getElementById(\"firstName\").focus();\n    // document.getElementById(\"lastName\").value = \"\";\n    // document.getElementById(\"displayName\").value = \"\";\n  };\n\n  // private legalLetters: string[] = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\",\n  // \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"-\", \"'\", \"\\\"\"];\n}\n\nexport interface AppProps\n{\n  machine: AppMachine;\n}\n\n@observer\nexport class App extends React.Component<AppProps>\n{\n  @observable currentMarkupHack: string = \"\";\n\n  private selectElementContents(el: any) {\n    var range = document.createRange();\n    range.selectNodeContents(el);\n    var sel = window.getSelection();\n    if (sel == null)\n    {\n      return;\n    }\n    sel.removeAllRanges();\n    sel.addRange(range);\n  }\n\n  private makeRequest()\n  {\n    axios.request<PersonSchema>({\n      url: 'localhost:8765'\n      // transformResponse: (r: PersonSchema) => r.data\n    }).then((response: any) => {\n      // `response` is of type `AxiosResponse<ServerData>`\n      // const { data } = response\n      // `data` is of type ServerData, correctly inferred\n      console.log(response.firstName);\n    })\n  }\n\n  public render()\n  {\n    return (\n      <span style={{width: \"100%\", height: \"100%\", display: \"inline-block\", verticalAlign: \"top\"}} \n            tabIndex={0}\n            id=\"mainApp\"\n      >\n\n        <button onClick={() => this.makeRequest()}>TEST</button>\n        <button onClick={() => runInAction(() => this.props.machine.newJournalEntry = !this.props.machine.newJournalEntry)}>\n          {this.props.machine.newJournalEntry ? \"Add markup to existing entry\" : \"Create new journal entry\"}\n        </button>\n        <button onClick={() => runInAction(() => this.props.machine.showDisplayJournalPlace = !this.props.machine.showDisplayJournalPlace)}>\n          Read journal\n        </button>\n        <br />\n        <br />\n\n\n        <div style={{width: \"50%\", display: \"inline-block\", verticalAlign: \"top\"}}>\n\n          {\n            this.props.machine.newJournalEntry && \n            !this.props.machine.showDisplayJournalPlace &&\n            <JournalWriter />\n          }\n\n          {\n            !this.props.machine.newJournalEntry && //           {/*<AddMarkupToExistingEntry machine={this.props.machine.addMarkupMachine} />*/}\n            !this.props.machine.showDisplayJournalPlace &&\n            <div onKeyDown={(e: any) => {\n              if (e.key === \"Enter\")\n              {\n                e.preventDefault();\n                this.props.machine.handleEasyMarkupGeneratorSubmit();\n              }\n            }}>\n              First Name: <input type=\"text\" id=\"firstName\" autoFocus={true}/>\n              <br />\n              Last Name: <input type=\"text\" id=\"lastName\" />\n              <br />\n              Display Name: <input type=\"text\" id=\"displayName\" />\n              <br />\n              <button onClick={this.props.machine.handleEasyMarkupGeneratorSubmit}>Submit</button>\n              <br />\n              <br />\n              <div id=\"displayCopyArea\">\n                <input id=\"placeToSelectText\" />\n              </div>\n            </div>\n          }\n          {\n            this.props.machine.showDisplayJournalPlace &&\n            <JournalReader machine={this.props.machine.journalReaderMachine}/>\n          }\n\n        </div>\n        <div style={{width: \"50%\", display: \"inline-block\", verticalAlign: \"top\", whiteSpace: \"pre-wrap\"}}>\n          {this.props.machine.finalText}\n        </div>\n      </span>\n    );\n  }\n}\n\ninterface EditorProps\n{\n\n}\n\n// @observer\n// class MyEditor extends React.Component<EditorProps>\n// {\n//   @observable editorState = EditorState.createEmpty();\n\n//   constructor(props: EditorProps)\n//   {\n//     super(props);\n//     // this.state = {editorState: EditorState.createEmpty()};\n//     // this.onChange = (editorState) => this.setState({editorState});\n//   }\n\n//   @action\n//   private onChange = (editorState: any): void => {\n//     this.editorState = editorState;\n//   }\n\n//   public render() \n//   {\n//     return (\n//         <Editor editorState={this.editorState} onChange={this.onChange} />\n//     );\n//   }\n// }\n\nexport default App;\n\n\n/*\nBUGS\n-have to write in chonological order - can't jump around with names, since they only add to end\n-need to have a story for name picker cancel\n-case sensitive (name popup only when name is capitalized) - or maybe only for particular names that are also common words (will)\n\n\nFEATURES\n-\n*/\n"]},"metadata":{},"sourceType":"module"}