{"ast":null,"code":"// import * as React from 'react';\nexport class MarkupUtils {\n  static makeMarkup(firstName, lastName, displayName = \"\") {\n    return \"[!!\" + (displayName === \"\" ? firstName : displayName) + \"|\" + firstName + \"_\" + lastName + \"!!]\";\n  }\n\n  static getMarkupPieces(markup) {\n    return Markup.MARKUP_REGEX.exec(markup);\n  }\n\n  static getFullMarkupFromString(rawText) {\n    const pieces = MarkupUtils.getMarkupPieces(rawText);\n\n    if (pieces == null) {\n      return null;\n    }\n\n    return pieces[0];\n  }\n\n  static getDisplayNameFromMarkup(markup) {\n    const pieces = MarkupUtils.getMarkupPieces(markup);\n\n    if (pieces == null) {\n      return null;\n    }\n\n    return pieces[1];\n  }\n\n  static getFirstNameFromMarkup(markup) {\n    const pieces = MarkupUtils.getMarkupPieces(markup);\n\n    if (pieces == null) {\n      return null;\n    }\n\n    return pieces[2];\n  }\n\n  static getLastNameFromMarkup(markup) {\n    const pieces = MarkupUtils.getMarkupPieces(markup);\n\n    if (pieces == null) {\n      return null;\n    }\n\n    return pieces[3];\n  }\n\n}\nexport default MarkupUtils;","map":{"version":3,"sources":["/Users/dirkstahlecker/programming/word-frequencies-heroku/src/MarkupUtils.ts"],"names":["MarkupUtils","makeMarkup","firstName","lastName","displayName","getMarkupPieces","markup","Markup","MARKUP_REGEX","exec","getFullMarkupFromString","rawText","pieces","getDisplayNameFromMarkup","getFirstNameFromMarkup","getLastNameFromMarkup"],"mappings":"AAAA;AAEA,OAAO,MAAMA,WAAN,CACP;AAEE,SAAcC,UAAd,CAAyBC,SAAzB,EAA4CC,QAA5C,EAA8DC,WAAmB,GAAG,EAApF,EACA;AACI,WAAO,SAASA,WAAW,KAAK,EAAhB,GAAqBF,SAArB,GAAiCE,WAA1C,IAAyD,GAAzD,GAA+DF,SAA/D,GAA2E,GAA3E,GAAiFC,QAAjF,GAA4F,KAAnG;AACH;;AAED,SAAeE,eAAf,CAA+BC,MAA/B,EACA;AACC,WAAOC,MAAM,CAACC,YAAP,CAAoBC,IAApB,CAAyBH,MAAzB,CAAP;AACA;;AAED,SAAcI,uBAAd,CAAsCC,OAAtC,EACA;AACC,UAAMC,MAA8B,GAAGZ,WAAW,CAACK,eAAZ,CAA4BM,OAA5B,CAAvC;;AACA,QAAIC,MAAM,IAAI,IAAd,EACA;AACC,aAAO,IAAP;AACA;;AACD,WAAOA,MAAM,CAAC,CAAD,CAAb;AACA;;AAED,SAAcC,wBAAd,CAAuCP,MAAvC,EACA;AACC,UAAMM,MAA8B,GAAGZ,WAAW,CAACK,eAAZ,CAA4BC,MAA5B,CAAvC;;AACA,QAAIM,MAAM,IAAI,IAAd,EACA;AACC,aAAO,IAAP;AACA;;AACD,WAAOA,MAAM,CAAC,CAAD,CAAb;AACA;;AAED,SAAcE,sBAAd,CAAqCR,MAArC,EACA;AACC,UAAMM,MAA8B,GAAGZ,WAAW,CAACK,eAAZ,CAA4BC,MAA5B,CAAvC;;AACA,QAAIM,MAAM,IAAI,IAAd,EACA;AACC,aAAO,IAAP;AACA;;AACD,WAAOA,MAAM,CAAC,CAAD,CAAb;AACA;;AAED,SAAcG,qBAAd,CAAoCT,MAApC,EACA;AACC,UAAMM,MAA8B,GAAGZ,WAAW,CAACK,eAAZ,CAA4BC,MAA5B,CAAvC;;AACA,QAAIM,MAAM,IAAI,IAAd,EACA;AACC,aAAO,IAAP;AACA;;AACD,WAAOA,MAAM,CAAC,CAAD,CAAb;AACA;;AAlDH;AAqDA,eAAeZ,WAAf","sourcesContent":["// import * as React from 'react';\n\nexport class MarkupUtils\n{\n\n  public static makeMarkup(firstName: string, lastName: string, displayName: string = \"\"): string\n  {\n      return \"[!!\" + (displayName === \"\" ? firstName : displayName) + \"|\" + firstName + \"_\" + lastName + \"!!]\";\n  }\n\n  private static getMarkupPieces(markup: string): RegExpExecArray | null\n  {\n  \treturn Markup.MARKUP_REGEX.exec(markup);\n  }\n\n  public static getFullMarkupFromString(rawText: string): string | null\n  {\n  \tconst pieces: RegExpExecArray | null = MarkupUtils.getMarkupPieces(rawText);\n  \tif (pieces == null)\n  \t{\n  \t\treturn null\n  \t}\n  \treturn pieces[0];\n  }\n\n  public static getDisplayNameFromMarkup(markup: string): string | null\n  {\n  \tconst pieces: RegExpExecArray | null = MarkupUtils.getMarkupPieces(markup);\n  \tif (pieces == null)\n  \t{\n  \t\treturn null\n  \t}\n  \treturn pieces[1];\n  }\n\n  public static getFirstNameFromMarkup(markup: string): string | null\n  {\n  \tconst pieces: RegExpExecArray | null = MarkupUtils.getMarkupPieces(markup);\n  \tif (pieces == null)\n  \t{\n  \t\treturn null\n  \t}\n  \treturn pieces[2];\n  }\n\n  public static getLastNameFromMarkup(markup: string): string | null\n  {\n  \tconst pieces: RegExpExecArray | null = MarkupUtils.getMarkupPieces(markup);\n  \tif (pieces == null)\n  \t{\n  \t\treturn null\n  \t}\n  \treturn pieces[3];\n  }\n}\n\nexport default MarkupUtils;\n"]},"metadata":{},"sourceType":"module"}