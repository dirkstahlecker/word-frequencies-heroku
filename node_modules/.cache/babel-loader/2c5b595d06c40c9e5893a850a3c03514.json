{"ast":null,"code":"'use strict'; // selected so (BASE - 1) * 0x100000000 + 0xffffffff is a safe integer\n\nvar BASE = 1000000;\n\nfunction readInt8(buffer) {\n  var high = buffer.readInt32BE(0);\n  var low = buffer.readUInt32BE(4);\n  var sign = '';\n\n  if (high < 0) {\n    high = ~high + (low === 0);\n    low = ~low + 1 >>> 0;\n    sign = '-';\n  }\n\n  var result = '';\n  var carry;\n  var t;\n  var digits;\n  var pad;\n  var l;\n  var i;\n  {\n    carry = high % BASE;\n    high = high / BASE >>> 0;\n    t = 0x100000000 * carry + low;\n    low = t / BASE >>> 0;\n    digits = '' + (t - BASE * low);\n\n    if (low === 0 && high === 0) {\n      return sign + digits + result;\n    }\n\n    pad = '';\n    l = 6 - digits.length;\n\n    for (i = 0; i < l; i++) {\n      pad += '0';\n    }\n\n    result = pad + digits + result;\n  }\n  {\n    carry = high % BASE;\n    high = high / BASE >>> 0;\n    t = 0x100000000 * carry + low;\n    low = t / BASE >>> 0;\n    digits = '' + (t - BASE * low);\n\n    if (low === 0 && high === 0) {\n      return sign + digits + result;\n    }\n\n    pad = '';\n    l = 6 - digits.length;\n\n    for (i = 0; i < l; i++) {\n      pad += '0';\n    }\n\n    result = pad + digits + result;\n  }\n  {\n    carry = high % BASE;\n    high = high / BASE >>> 0;\n    t = 0x100000000 * carry + low;\n    low = t / BASE >>> 0;\n    digits = '' + (t - BASE * low);\n\n    if (low === 0 && high === 0) {\n      return sign + digits + result;\n    }\n\n    pad = '';\n    l = 6 - digits.length;\n\n    for (i = 0; i < l; i++) {\n      pad += '0';\n    }\n\n    result = pad + digits + result;\n  }\n  {\n    carry = high % BASE;\n    t = 0x100000000 * carry + low;\n    digits = '' + t % BASE;\n    return sign + digits + result;\n  }\n}\n\nmodule.exports = readInt8;","map":{"version":3,"sources":["/Users/dirkstahlecker/programming/word-frequencies-heroku/node_modules/pg-int8/index.js"],"names":["BASE","readInt8","buffer","high","readInt32BE","low","readUInt32BE","sign","result","carry","t","digits","pad","l","i","length","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n// selected so (BASE - 1) * 0x100000000 + 0xffffffff is a safe integer\nvar BASE = 1000000;\n\nfunction readInt8(buffer) {\n\tvar high = buffer.readInt32BE(0);\n\tvar low = buffer.readUInt32BE(4);\n\tvar sign = '';\n\n\tif (high < 0) {\n\t\thigh = ~high + (low === 0);\n\t\tlow = (~low + 1) >>> 0;\n\t\tsign = '-';\n\t}\n\n\tvar result = '';\n\tvar carry;\n\tvar t;\n\tvar digits;\n\tvar pad;\n\tvar l;\n\tvar i;\n\n\t{\n\t\tcarry = high % BASE;\n\t\thigh = high / BASE >>> 0;\n\n\t\tt = 0x100000000 * carry + low;\n\t\tlow = t / BASE >>> 0;\n\t\tdigits = '' + (t - BASE * low);\n\n\t\tif (low === 0 && high === 0) {\n\t\t\treturn sign + digits + result;\n\t\t}\n\n\t\tpad = '';\n\t\tl = 6 - digits.length;\n\n\t\tfor (i = 0; i < l; i++) {\n\t\t\tpad += '0';\n\t\t}\n\n\t\tresult = pad + digits + result;\n\t}\n\n\t{\n\t\tcarry = high % BASE;\n\t\thigh = high / BASE >>> 0;\n\n\t\tt = 0x100000000 * carry + low;\n\t\tlow = t / BASE >>> 0;\n\t\tdigits = '' + (t - BASE * low);\n\n\t\tif (low === 0 && high === 0) {\n\t\t\treturn sign + digits + result;\n\t\t}\n\n\t\tpad = '';\n\t\tl = 6 - digits.length;\n\n\t\tfor (i = 0; i < l; i++) {\n\t\t\tpad += '0';\n\t\t}\n\n\t\tresult = pad + digits + result;\n\t}\n\n\t{\n\t\tcarry = high % BASE;\n\t\thigh = high / BASE >>> 0;\n\n\t\tt = 0x100000000 * carry + low;\n\t\tlow = t / BASE >>> 0;\n\t\tdigits = '' + (t - BASE * low);\n\n\t\tif (low === 0 && high === 0) {\n\t\t\treturn sign + digits + result;\n\t\t}\n\n\t\tpad = '';\n\t\tl = 6 - digits.length;\n\n\t\tfor (i = 0; i < l; i++) {\n\t\t\tpad += '0';\n\t\t}\n\n\t\tresult = pad + digits + result;\n\t}\n\n\t{\n\t\tcarry = high % BASE;\n\t\tt = 0x100000000 * carry + low;\n\t\tdigits = '' + t % BASE;\n\n\t\treturn sign + digits + result;\n\t}\n}\n\nmodule.exports = readInt8;\n"]},"metadata":{},"sourceType":"script"}