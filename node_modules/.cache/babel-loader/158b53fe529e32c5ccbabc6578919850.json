{"ast":null,"code":"import _classCallCheck from\"/Users/dirkstahlecker/programming/word-frequencies-heroku/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/dirkstahlecker/programming/word-frequencies-heroku/node_modules/@babel/runtime/helpers/esm/createClass\";// import * as React from 'react';\nexport var MarkupUtils=/*#__PURE__*/function(){function MarkupUtils(){_classCallCheck(this,MarkupUtils);}_createClass(MarkupUtils,null,[{key:\"makeMarkup\",//eslint-disable-next-line no-useless-escape\nvalue:function makeMarkup(firstName,lastName){var displayName=arguments.length>2&&arguments[2]!==undefined?arguments[2]:\"\";return\"[!!\"+(displayName===\"\"?firstName:displayName)+\"|\"+firstName+\"_\"+lastName+\"!!]\";}},{key:\"getMarkupPieces\",value:function getMarkupPieces(markup){return MarkupUtils.MARKUP_REGEX.exec(markup);}},{key:\"getFullMarkupFromString\",value:function getFullMarkupFromString(rawText){var pieces=MarkupUtils.getMarkupPieces(rawText);if(pieces==null){return null;}return pieces[0];}},{key:\"getDisplayNameFromMarkup\",value:function getDisplayNameFromMarkup(markup){var pieces=MarkupUtils.getMarkupPieces(markup);if(pieces==null){return null;}return pieces[1];}},{key:\"getFirstNameFromMarkup\",value:function getFirstNameFromMarkup(markup){var pieces=MarkupUtils.getMarkupPieces(markup);if(pieces==null){return null;}return pieces[2];}},{key:\"getLastNameFromMarkup\",value:function getLastNameFromMarkup(markup){var pieces=MarkupUtils.getMarkupPieces(markup);if(pieces==null){return null;}return pieces[3];}}]);return MarkupUtils;}();MarkupUtils.MARKUP_REGEX=/\\[!!([^\\|]+)\\|([^_]+)_([^!]+)!!\\]/;export default MarkupUtils;","map":{"version":3,"sources":["/Users/dirkstahlecker/programming/word-frequencies-heroku/src/MarkupUtils.ts"],"names":["MarkupUtils","firstName","lastName","displayName","markup","MARKUP_REGEX","exec","rawText","pieces","getMarkupPieces"],"mappings":"sRAAA;AAEA,UAAaA,CAAAA,WAAb,oIAEE;AAFF,0BAI2BC,SAJ3B,CAI8CC,QAJ9C,CAKE,IAD8DC,CAAAA,WAC9D,2DADoF,EACpF,CACI,MAAO,OAASA,WAAW,GAAK,EAAhB,CAAqBF,SAArB,CAAiCE,WAA1C,EAAyD,GAAzD,CAA+DF,SAA/D,CAA2E,GAA3E,CAAiFC,QAAjF,CAA4F,KAAnG,CACH,CAPH,wDASiCE,MATjC,CAUE,CACC,MAAOJ,CAAAA,WAAW,CAACK,YAAZ,CAAyBC,IAAzB,CAA8BF,MAA9B,CAAP,CACA,CAZH,wEAcwCG,OAdxC,CAeE,CACC,GAAMC,CAAAA,MAA8B,CAAGR,WAAW,CAACS,eAAZ,CAA4BF,OAA5B,CAAvC,CACA,GAAIC,MAAM,EAAI,IAAd,CACA,CACC,MAAO,KAAP,CACA,CACD,MAAOA,CAAAA,MAAM,CAAC,CAAD,CAAb,CACA,CAtBH,0EAwByCJ,MAxBzC,CAyBE,CACC,GAAMI,CAAAA,MAA8B,CAAGR,WAAW,CAACS,eAAZ,CAA4BL,MAA5B,CAAvC,CACA,GAAII,MAAM,EAAI,IAAd,CACA,CACC,MAAO,KAAP,CACA,CACD,MAAOA,CAAAA,MAAM,CAAC,CAAD,CAAb,CACA,CAhCH,sEAkCuCJ,MAlCvC,CAmCE,CACC,GAAMI,CAAAA,MAA8B,CAAGR,WAAW,CAACS,eAAZ,CAA4BL,MAA5B,CAAvC,CACA,GAAII,MAAM,EAAI,IAAd,CACA,CACC,MAAO,KAAP,CACA,CACD,MAAOA,CAAAA,MAAM,CAAC,CAAD,CAAb,CACA,CA1CH,oEA4CsCJ,MA5CtC,CA6CE,CACC,GAAMI,CAAAA,MAA8B,CAAGR,WAAW,CAACS,eAAZ,CAA4BL,MAA5B,CAAvC,CACA,GAAII,MAAM,EAAI,IAAd,CACA,CACC,MAAO,KAAP,CACA,CACD,MAAOA,CAAAA,MAAM,CAAC,CAAD,CAAb,CACA,CApDH,2BAAaR,W,CAGGK,Y,CAAe,mC,CAoD/B,cAAeL,CAAAA,WAAf","sourcesContent":["// import * as React from 'react';\n\nexport class MarkupUtils\n{\n  //eslint-disable-next-line no-useless-escape\n\tprivate static MARKUP_REGEX = /\\[!!([^\\|]+)\\|([^_]+)_([^!]+)!!\\]/;\n  public static makeMarkup(firstName: string, lastName: string, displayName: string = \"\"): string\n  {\n      return \"[!!\" + (displayName === \"\" ? firstName : displayName) + \"|\" + firstName + \"_\" + lastName + \"!!]\";\n  }\n\n  private static getMarkupPieces(markup: string): RegExpExecArray | null\n  {\n  \treturn MarkupUtils.MARKUP_REGEX.exec(markup);\n  }\n\n  public static getFullMarkupFromString(rawText: string): string | null\n  {\n  \tconst pieces: RegExpExecArray | null = MarkupUtils.getMarkupPieces(rawText);\n  \tif (pieces == null)\n  \t{\n  \t\treturn null\n  \t}\n  \treturn pieces[0];\n  }\n\n  public static getDisplayNameFromMarkup(markup: string): string | null\n  {\n  \tconst pieces: RegExpExecArray | null = MarkupUtils.getMarkupPieces(markup);\n  \tif (pieces == null)\n  \t{\n  \t\treturn null\n  \t}\n  \treturn pieces[1];\n  }\n\n  public static getFirstNameFromMarkup(markup: string): string | null\n  {\n  \tconst pieces: RegExpExecArray | null = MarkupUtils.getMarkupPieces(markup);\n  \tif (pieces == null)\n  \t{\n  \t\treturn null\n  \t}\n  \treturn pieces[2];\n  }\n\n  public static getLastNameFromMarkup(markup: string): string | null\n  {\n  \tconst pieces: RegExpExecArray | null = MarkupUtils.getMarkupPieces(markup);\n  \tif (pieces == null)\n  \t{\n  \t\treturn null\n  \t}\n  \treturn pieces[3];\n  }\n}\n\nexport default MarkupUtils;"]},"metadata":{},"sourceType":"module"}