{"code":"import { observable, runInAction, transaction } from \"mobx\";\r\nimport React from \"react\";\r\nimport { useAsObservableSourceInternal } from \"./useAsObservableSource\";\r\nimport { isPlainObject } from \"./utils\";\r\nexport function useLocalStore(initializer, current) {\r\n    const source = useAsObservableSourceInternal(current, true);\r\n    return React.useState(() => {\r\n        const local = observable(initializer(source));\r\n        if (isPlainObject(local)) {\r\n            runInAction(() => {\r\n                Object.keys(local).forEach(key => {\r\n                    const value = local[key];\r\n                    if (typeof value === \"function\") {\r\n                        // @ts-ignore No idea why ts2536 is popping out here\r\n                        local[key] = wrapInTransaction(value, local);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        return local;\r\n    })[0];\r\n}\r\n// tslint:disable-next-line: ban-types\r\nfunction wrapInTransaction(fn, context) {\r\n    return (...args) => {\r\n        return transaction(() => fn.apply(context, args));\r\n    };\r\n}\r\n","references":["D:/workspace/github/mobx-react-lite/node_modules/mobx/lib/mobx.d.ts","D:/workspace/github/mobx-react-lite/node_modules/@types/react/index.d.ts","D:/workspace/github/mobx-react-lite/src/useAsObservableSource.ts","D:/workspace/github/mobx-react-lite/src/utils.ts"],"dts":{"name":"D:/workspace/github/mobx-react-lite/src/useLocalStore.d.ts","writeByteOrderMark":false,"text":"export declare function useLocalStore<TStore extends Record<string, any>, TSource extends object = any>(initializer: (source: TSource) => TStore, current?: TSource): TStore;\r\n"}}
