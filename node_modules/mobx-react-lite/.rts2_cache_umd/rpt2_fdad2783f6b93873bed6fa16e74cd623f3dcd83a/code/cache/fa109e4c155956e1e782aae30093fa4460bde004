{"code":"import { forwardRef, memo } from \"react\";\r\nimport { isUsingStaticRendering } from \"./staticRendering\";\r\nimport { useObserver } from \"./useObserver\";\r\n// n.b. base case is not used for actual typings or exported in the typing files\r\nexport function observer(baseComponent, options) {\r\n    // The working of observer is explained step by step in this talk: https://www.youtube.com/watch?v=cPF4iBedoF0&feature=youtu.be&t=1307\r\n    if (isUsingStaticRendering()) {\r\n        return baseComponent;\r\n    }\r\n    const realOptions = {\r\n        forwardRef: false,\r\n        ...options\r\n    };\r\n    const baseComponentName = baseComponent.displayName || baseComponent.name;\r\n    const wrappedComponent = (props, ref) => {\r\n        return useObserver(() => baseComponent(props, ref), baseComponentName);\r\n    };\r\n    wrappedComponent.displayName = baseComponentName;\r\n    // memo; we are not intested in deep updates\r\n    // in props; we assume that if deep objects are changed,\r\n    // this is in observables, which would have been tracked anyway\r\n    let memoComponent;\r\n    if (realOptions.forwardRef) {\r\n        // we have to use forwardRef here because:\r\n        // 1. it cannot go before memo, only after it\r\n        // 2. forwardRef converts the function into an actual component, so we can't let the baseComponent do it\r\n        //    since it wouldn't be a callable function anymore\r\n        memoComponent = memo(forwardRef(wrappedComponent));\r\n    }\r\n    else {\r\n        memoComponent = memo(wrappedComponent);\r\n    }\r\n    copyStaticProperties(baseComponent, memoComponent);\r\n    memoComponent.displayName = baseComponentName;\r\n    return memoComponent;\r\n}\r\n// based on https://github.com/mridgway/hoist-non-react-statics/blob/master/src/index.js\r\nconst hoistBlackList = {\r\n    $$typeof: true,\r\n    render: true,\r\n    compare: true,\r\n    type: true\r\n};\r\nfunction copyStaticProperties(base, target) {\r\n    Object.keys(base).forEach(key => {\r\n        if (base.hasOwnProperty(key) && !hoistBlackList[key]) {\r\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(base, key));\r\n        }\r\n    });\r\n}\r\n//# sourceMappingURL=observer.js.map","references":["D:/workspace/github/mobx-react-lite/node_modules/@types/react/index.d.ts","D:/workspace/github/mobx-react-lite/src/staticRendering.ts","D:/workspace/github/mobx-react-lite/src/useObserver.ts"],"map":"{\"version\":3,\"file\":\"observer.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/observer.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,OAAO,CAAA;AACxC,OAAO,EAAE,sBAAsB,EAAE,MAAM,mBAAmB,CAAA;AAC1D,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAA;AAgB3C,gFAAgF;AAChF,MAAM,UAAU,QAAQ,CACpB,aAAoD,EACpD,OAA0B;IAE1B,sIAAsI;IACtI,IAAI,sBAAsB,EAAE,EAAE;QAC1B,OAAO,aAAa,CAAA;KACvB;IAED,MAAM,WAAW,GAAG;QAChB,UAAU,EAAE,KAAK;QACjB,GAAG,OAAO;KACb,CAAA;IAED,MAAM,iBAAiB,GAAG,aAAa,CAAC,WAAW,IAAI,aAAa,CAAC,IAAI,CAAA;IAEzE,MAAM,gBAAgB,GAAG,CAAC,KAAQ,EAAE,GAAoB,EAAE,EAAE;QACxD,OAAO,WAAW,CAAC,GAAG,EAAE,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,iBAAiB,CAAC,CAAA;IAC1E,CAAC,CAAA;IACD,gBAAgB,CAAC,WAAW,GAAG,iBAAiB,CAAA;IAEhD,4CAA4C;IAC5C,wDAAwD;IACxD,+DAA+D;IAC/D,IAAI,aAAa,CAAA;IACjB,IAAI,WAAW,CAAC,UAAU,EAAE;QACxB,0CAA0C;QAC1C,6CAA6C;QAC7C,wGAAwG;QACxG,sDAAsD;QACtD,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC,CAAA;KACrD;SAAM;QACH,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAA;KACzC;IAED,oBAAoB,CAAC,aAAa,EAAE,aAAa,CAAC,CAAA;IAClD,aAAa,CAAC,WAAW,GAAG,iBAAiB,CAAA;IAE7C,OAAO,aAAa,CAAA;AACxB,CAAC;AAED,wFAAwF;AACxF,MAAM,cAAc,GAAQ;IACxB,QAAQ,EAAE,IAAI;IACd,MAAM,EAAE,IAAI;IACZ,OAAO,EAAE,IAAI;IACb,IAAI,EAAE,IAAI;CACb,CAAA;AAED,SAAS,oBAAoB,CAAC,IAAS,EAAE,MAAW;IAChD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;QAC5B,IAAI,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;YAClD,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC,wBAAwB,CAAC,IAAI,EAAE,GAAG,CAAE,CAAC,CAAA;SAClF;IACL,CAAC,CAAC,CAAA;AACN,CAAC\"}","dts":{"name":"D:/workspace/github/mobx-react-lite/observer.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"react\" />\r\nexport interface IObserverOptions {\r\n    readonly forwardRef?: boolean;\r\n}\r\nexport declare function observer<P extends object, TRef = {}>(baseComponent: React.RefForwardingComponent<TRef, P>, options: IObserverOptions & {\r\n    forwardRef: true;\r\n}): React.MemoExoticComponent<React.ForwardRefExoticComponent<React.PropsWithoutRef<P> & React.RefAttributes<TRef>>>;\r\nexport declare function observer<P extends object>(baseComponent: React.FunctionComponent<P>, options?: IObserverOptions): React.FunctionComponent<P>;\r\n"}}
